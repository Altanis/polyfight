<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="566" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="549.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="549.00"> </text><svg id="frames" x="10" width="1180" total_samples="97018"><g><title>libsystem_m.dylib`atan2f (10 samples, 0.01%)</title><rect x="0.0216%" y="389" width="0.0103%" height="15" fill="rgb(227,0,7)" fg:x="21" fg:w="10"/><text x="0.2716%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.03%)</title><rect x="0.0464%" y="389" width="0.0289%" height="15" fill="rgb(217,0,24)" fg:x="45" fg:w="28"/><text x="0.2964%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (23 samples, 0.02%)</title><rect x="0.0773%" y="389" width="0.0237%" height="15" fill="rgb(221,193,54)" fg:x="75" fg:w="23"/><text x="0.3273%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12,906 samples, 13.30%)</title><rect x="0.1031%" y="389" width="13.3027%" height="15" fill="rgb(248,212,6)" fg:x="100" fg:w="12906"/><text x="0.3531%" y="399.50">libsystem_platform.d..</text></g><g><title>polyfight`DYLD-STUB$$free (14 samples, 0.01%)</title><rect x="13.4243%" y="389" width="0.0144%" height="15" fill="rgb(208,68,35)" fg:x="13024" fg:w="14"/><text x="13.6743%" y="399.50"></text></g><g><title>polyfight`DYLD-STUB$$memcpy (390 samples, 0.40%)</title><rect x="13.4398%" y="389" width="0.4020%" height="15" fill="rgb(232,128,0)" fg:x="13039" fg:w="390"/><text x="13.6898%" y="399.50"></text></g><g><title>libsystem_m.dylib`__sincosf_stret (32 samples, 0.03%)</title><rect x="20.0757%" y="373" width="0.0330%" height="15" fill="rgb(207,160,47)" fg:x="19477" fg:w="32"/><text x="20.3257%" y="383.50"></text></g><g><title>libsystem_m.dylib`atan2f (11 samples, 0.01%)</title><rect x="20.1086%" y="373" width="0.0113%" height="15" fill="rgb(228,23,34)" fg:x="19509" fg:w="11"/><text x="20.3586%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (90 samples, 0.09%)</title><rect x="20.1354%" y="373" width="0.0928%" height="15" fill="rgb(218,30,26)" fg:x="19535" fg:w="90"/><text x="20.3854%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.02%)</title><rect x="20.2323%" y="373" width="0.0206%" height="15" fill="rgb(220,122,19)" fg:x="19629" fg:w="20"/><text x="20.4823%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.02%)</title><rect x="20.2354%" y="357" width="0.0175%" height="15" fill="rgb(250,228,42)" fg:x="19632" fg:w="17"/><text x="20.4854%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (210 samples, 0.22%)</title><rect x="20.2725%" y="373" width="0.2165%" height="15" fill="rgb(240,193,28)" fg:x="19668" fg:w="210"/><text x="20.5225%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (10 samples, 0.01%)</title><rect x="20.4890%" y="373" width="0.0103%" height="15" fill="rgb(216,20,37)" fg:x="19878" fg:w="10"/><text x="20.7390%" y="383.50"></text></g><g><title>polyfight`futures_core::task::__internal::atomic_waker::AtomicWaker::register (20 samples, 0.02%)</title><rect x="20.5158%" y="325" width="0.0206%" height="15" fill="rgb(206,188,39)" fg:x="19904" fg:w="20"/><text x="20.7658%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (2,597 samples, 2.68%)</title><rect x="20.5601%" y="261" width="2.6768%" height="15" fill="rgb(217,207,13)" fg:x="19947" fg:w="2597"/><text x="20.8101%" y="271.50">li..</text></g><g><title>polyfight`&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (13 samples, 0.01%)</title><rect x="23.2369%" y="261" width="0.0134%" height="15" fill="rgb(231,73,38)" fg:x="22544" fg:w="13"/><text x="23.4869%" y="271.50"></text></g><g><title>polyfight`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (2,618 samples, 2.70%)</title><rect x="20.5529%" y="277" width="2.6985%" height="15" fill="rgb(225,20,46)" fg:x="19940" fg:w="2618"/><text x="20.8029%" y="287.50">po..</text></g><g><title>polyfight`tokio::runtime::context::with_scheduler (17 samples, 0.02%)</title><rect x="23.2565%" y="197" width="0.0175%" height="15" fill="rgb(210,31,41)" fg:x="22563" fg:w="17"/><text x="23.5065%" y="207.50"></text></g><g><title>polyfight`tokio::runtime::driver::Handle::unpark (16 samples, 0.02%)</title><rect x="23.2575%" y="181" width="0.0165%" height="15" fill="rgb(221,200,47)" fg:x="22564" fg:w="16"/><text x="23.5075%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`kevent (16 samples, 0.02%)</title><rect x="23.2575%" y="165" width="0.0165%" height="15" fill="rgb(226,26,5)" fg:x="22564" fg:w="16"/><text x="23.5075%" y="175.50"></text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (18 samples, 0.02%)</title><rect x="23.2565%" y="213" width="0.0186%" height="15" fill="rgb(249,33,26)" fg:x="22563" fg:w="18"/><text x="23.5065%" y="223.50"></text></g><g><title>polyfight`&lt;tokio_tungstenite::compat::WakerProxy as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (20 samples, 0.02%)</title><rect x="23.2565%" y="245" width="0.0206%" height="15" fill="rgb(235,183,28)" fg:x="22563" fg:w="20"/><text x="23.5065%" y="255.50"></text></g><g><title>polyfight`tokio::runtime::task::waker::wake_by_val (20 samples, 0.02%)</title><rect x="23.2565%" y="229" width="0.0206%" height="15" fill="rgb(221,5,38)" fg:x="22563" fg:w="20"/><text x="23.5065%" y="239.50"></text></g><g><title>polyfight`futures_task::waker::wake_by_ref_arc_raw (21 samples, 0.02%)</title><rect x="23.2565%" y="261" width="0.0216%" height="15" fill="rgb(247,18,42)" fg:x="22563" fg:w="21"/><text x="23.5065%" y="271.50"></text></g><g><title>polyfight`tokio::runtime::io::registration::Registration::poll_ready (30 samples, 0.03%)</title><rect x="23.2524%" y="277" width="0.0309%" height="15" fill="rgb(241,131,45)" fg:x="22559" fg:w="30"/><text x="23.5024%" y="287.50"></text></g><g><title>polyfight`&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Write&gt;::write (2,659 samples, 2.74%)</title><rect x="20.5436%" y="309" width="2.7407%" height="15" fill="rgb(249,31,29)" fg:x="19931" fg:w="2659"/><text x="20.7936%" y="319.50">po..</text></g><g><title>polyfight`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (2,658 samples, 2.74%)</title><rect x="20.5446%" y="293" width="2.7397%" height="15" fill="rgb(225,111,53)" fg:x="19932" fg:w="2658"/><text x="20.7946%" y="303.50">po..</text></g><g><title>polyfight`&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::poll_flush (2,699 samples, 2.78%)</title><rect x="20.5086%" y="341" width="2.7820%" height="15" fill="rgb(238,160,17)" fg:x="19897" fg:w="2699"/><text x="20.7586%" y="351.50">po..</text></g><g><title>polyfight`tungstenite::protocol::WebSocketContext::flush (2,670 samples, 2.75%)</title><rect x="20.5385%" y="325" width="2.7521%" height="15" fill="rgb(214,148,48)" fg:x="19926" fg:w="2670"/><text x="20.7885%" y="335.50">po..</text></g><g><title>polyfight`&lt;axum::extract::ws::WebSocket as futures_sink::Sink&lt;axum::extract::ws::Message&gt;&gt;::poll_flush (2,701 samples, 2.78%)</title><rect x="20.5086%" y="357" width="2.7840%" height="15" fill="rgb(232,36,49)" fg:x="19897" fg:w="2701"/><text x="20.7586%" y="367.50">po..</text></g><g><title>libsystem_malloc.dylib`free_small (18 samples, 0.02%)</title><rect x="23.3781%" y="261" width="0.0186%" height="15" fill="rgb(209,103,24)" fg:x="22681" fg:w="18"/><text x="23.6281%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.02%)</title><rect x="23.3967%" y="261" width="0.0206%" height="15" fill="rgb(229,88,8)" fg:x="22699" fg:w="20"/><text x="23.6467%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.02%)</title><rect x="23.3998%" y="245" width="0.0175%" height="15" fill="rgb(213,181,19)" fg:x="22702" fg:w="17"/><text x="23.6498%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (80 samples, 0.08%)</title><rect x="23.4183%" y="261" width="0.0825%" height="15" fill="rgb(254,191,54)" fg:x="22720" fg:w="80"/><text x="23.6683%" y="271.50"></text></g><g><title>polyfight`tungstenite::protocol::WebSocketContext::_write (191 samples, 0.20%)</title><rect x="23.3132%" y="309" width="0.1969%" height="15" fill="rgb(241,83,37)" fg:x="22618" fg:w="191"/><text x="23.5632%" y="319.50"></text></g><g><title>polyfight`tungstenite::protocol::WebSocketContext::buffer_frame (183 samples, 0.19%)</title><rect x="23.3214%" y="293" width="0.1886%" height="15" fill="rgb(233,36,39)" fg:x="22626" fg:w="183"/><text x="23.5714%" y="303.50"></text></g><g><title>polyfight`tungstenite::protocol::frame::FrameCodec::buffer_frame (146 samples, 0.15%)</title><rect x="23.3596%" y="277" width="0.1505%" height="15" fill="rgb(226,3,54)" fg:x="22663" fg:w="146"/><text x="23.6096%" y="287.50"></text></g><g><title>polyfight`&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::start_send (210 samples, 0.22%)</title><rect x="23.2967%" y="341" width="0.2165%" height="15" fill="rgb(245,192,40)" fg:x="22602" fg:w="210"/><text x="23.5467%" y="351.50"></text></g><g><title>polyfight`tungstenite::protocol::WebSocketContext::write (209 samples, 0.22%)</title><rect x="23.2977%" y="325" width="0.2154%" height="15" fill="rgb(238,167,29)" fg:x="22603" fg:w="209"/><text x="23.5477%" y="335.50"></text></g><g><title>polyfight`&lt;axum::extract::ws::WebSocket as futures_sink::Sink&lt;axum::extract::ws::Message&gt;&gt;::start_send (215 samples, 0.22%)</title><rect x="23.2946%" y="357" width="0.2216%" height="15" fill="rgb(232,182,51)" fg:x="22600" fg:w="215"/><text x="23.5446%" y="367.50"></text></g><g><title>polyfight`&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_flush (2,936 samples, 3.03%)</title><rect x="20.5034%" y="373" width="3.0262%" height="15" fill="rgb(231,60,39)" fg:x="19892" fg:w="2936"/><text x="20.7534%" y="383.50">pol..</text></g><g><title>polyfight`&lt;polyfight::game::entity::base_entity::GenericEntity as polyfight::game::entity::base_entity::GenericEntityHelpers&gt;::take_census (21 samples, 0.02%)</title><rect x="23.5317%" y="373" width="0.0216%" height="15" fill="rgb(208,69,12)" fg:x="22830" fg:w="21"/><text x="23.7817%" y="383.50"></text></g><g><title>polyfight`&lt;polyfight::game::entity::projectile_entity::ProjectileEntity as polyfight::game::entity::base_entity::GenericEntityHelpers&gt;::take_census (70 samples, 0.07%)</title><rect x="23.5554%" y="373" width="0.0722%" height="15" fill="rgb(235,93,37)" fg:x="22853" fg:w="70"/><text x="23.8054%" y="383.50"></text></g><g><title>polyfight`&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="23.6503%" y="357" width="0.0186%" height="15" fill="rgb(213,116,39)" fg:x="22945" fg:w="18"/><text x="23.9003%" y="367.50"></text></g><g><title>polyfight`&lt;tokio::sync::mutex::Mutex&lt;T&gt; as polyfight::utils::timed_mutex::AsyncTimedLock&lt;T&gt;&gt;::lock_with_timeout::_{{closure}} (30 samples, 0.03%)</title><rect x="23.6410%" y="373" width="0.0309%" height="15" fill="rgb(222,207,29)" fg:x="22936" fg:w="30"/><text x="23.8910%" y="383.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.02%)</title><rect x="23.6874%" y="373" width="0.0175%" height="15" fill="rgb(206,96,30)" fg:x="22981" fg:w="17"/><text x="23.9374%" y="383.50"></text></g><g><title>polyfight`alloc::vec::in_place_collect::from_iter_in_place (469 samples, 0.48%)</title><rect x="23.7049%" y="373" width="0.4834%" height="15" fill="rgb(218,138,4)" fg:x="22998" fg:w="469"/><text x="23.9549%" y="383.50"></text></g><g><title>polyfight`bytes::bytes::_&lt;impl core::convert::From&lt;bytes::bytes::Bytes&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from (22 samples, 0.02%)</title><rect x="24.1883%" y="373" width="0.0227%" height="15" fill="rgb(250,191,14)" fg:x="23467" fg:w="22"/><text x="24.4383%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.01%)</title><rect x="24.2275%" y="277" width="0.0113%" height="15" fill="rgb(239,60,40)" fg:x="23505" fg:w="11"/><text x="24.4775%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (10 samples, 0.01%)</title><rect x="24.2285%" y="261" width="0.0103%" height="15" fill="rgb(206,27,48)" fg:x="23506" fg:w="10"/><text x="24.4785%" y="271.50"></text></g><g><title>polyfight`bytes::bytes_mut::BytesMut::reserve_inner (21 samples, 0.02%)</title><rect x="24.2182%" y="373" width="0.0216%" height="15" fill="rgb(225,35,8)" fg:x="23496" fg:w="21"/><text x="24.4682%" y="383.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (20 samples, 0.02%)</title><rect x="24.2192%" y="357" width="0.0206%" height="15" fill="rgb(250,213,24)" fg:x="23497" fg:w="20"/><text x="24.4692%" y="367.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (20 samples, 0.02%)</title><rect x="24.2192%" y="341" width="0.0206%" height="15" fill="rgb(247,123,22)" fg:x="23497" fg:w="20"/><text x="24.4692%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (17 samples, 0.02%)</title><rect x="24.2223%" y="325" width="0.0175%" height="15" fill="rgb(231,138,38)" fg:x="23500" fg:w="17"/><text x="24.4723%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (16 samples, 0.02%)</title><rect x="24.2233%" y="309" width="0.0165%" height="15" fill="rgb(231,145,46)" fg:x="23501" fg:w="16"/><text x="24.4733%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (13 samples, 0.01%)</title><rect x="24.2264%" y="293" width="0.0134%" height="15" fill="rgb(251,118,11)" fg:x="23504" fg:w="13"/><text x="24.4764%" y="303.50"></text></g><g><title>polyfight`&lt;polyfight::game::entity::base_entity::GenericEntity as polyfight::game::entity::base_entity::GenericEntityHelpers&gt;::take_census (57 samples, 0.06%)</title><rect x="24.4336%" y="357" width="0.0588%" height="15" fill="rgb(217,147,25)" fg:x="23705" fg:w="57"/><text x="24.6836%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (26 samples, 0.03%)</title><rect x="26.4941%" y="261" width="0.0268%" height="15" fill="rgb(247,81,37)" fg:x="25704" fg:w="26"/><text x="26.7441%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.02%)</title><rect x="26.4992%" y="245" width="0.0216%" height="15" fill="rgb(209,12,38)" fg:x="25709" fg:w="21"/><text x="26.7492%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (18 samples, 0.02%)</title><rect x="26.5023%" y="229" width="0.0186%" height="15" fill="rgb(227,1,9)" fg:x="25712" fg:w="18"/><text x="26.7523%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (14 samples, 0.01%)</title><rect x="26.5064%" y="213" width="0.0144%" height="15" fill="rgb(248,47,43)" fg:x="25716" fg:w="14"/><text x="26.7564%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.01%)</title><rect x="26.5611%" y="245" width="0.0103%" height="15" fill="rgb(221,10,30)" fg:x="25769" fg:w="10"/><text x="26.8111%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (50 samples, 0.05%)</title><rect x="26.5260%" y="261" width="0.0515%" height="15" fill="rgb(210,229,1)" fg:x="25735" fg:w="50"/><text x="26.7760%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (124 samples, 0.13%)</title><rect x="26.4827%" y="277" width="0.1278%" height="15" fill="rgb(222,148,37)" fg:x="25693" fg:w="124"/><text x="26.7327%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (32 samples, 0.03%)</title><rect x="26.5775%" y="261" width="0.0330%" height="15" fill="rgb(234,67,33)" fg:x="25785" fg:w="32"/><text x="26.8275%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`realloc (142 samples, 0.15%)</title><rect x="26.4765%" y="293" width="0.1464%" height="15" fill="rgb(247,98,35)" fg:x="25687" fg:w="142"/><text x="26.7265%" y="303.50"></text></g><g><title>polyfight`&lt;polyfight::game::entity::projectile_entity::ProjectileEntity as polyfight::game::entity::base_entity::GenericEntityHelpers&gt;::take_census (2,069 samples, 2.13%)</title><rect x="24.4924%" y="357" width="2.1326%" height="15" fill="rgb(247,138,52)" fg:x="23762" fg:w="2069"/><text x="24.7424%" y="367.50">p..</text></g><g><title>polyfight`bytes::bytes_mut::BytesMut::reserve_inner (160 samples, 0.16%)</title><rect x="26.4600%" y="341" width="0.1649%" height="15" fill="rgb(213,79,30)" fg:x="25671" fg:w="160"/><text x="26.7100%" y="351.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (154 samples, 0.16%)</title><rect x="26.4662%" y="325" width="0.1587%" height="15" fill="rgb(246,177,23)" fg:x="25677" fg:w="154"/><text x="26.7162%" y="335.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (150 samples, 0.15%)</title><rect x="26.4703%" y="309" width="0.1546%" height="15" fill="rgb(230,62,27)" fg:x="25681" fg:w="150"/><text x="26.7203%" y="319.50"></text></g><g><title>polyfight`&lt;polyfight::game::entity::tank_entity::TankEntity as polyfight::game::entity::base_entity::GenericEntityHelpers&gt;::take_census (69 samples, 0.07%)</title><rect x="26.6250%" y="357" width="0.0711%" height="15" fill="rgb(216,154,8)" fg:x="25831" fg:w="69"/><text x="26.8750%" y="367.50"></text></g><g><title>polyfight`bytes::bytes_mut::BytesMut::freeze (12 samples, 0.01%)</title><rect x="26.6961%" y="357" width="0.0124%" height="15" fill="rgb(244,35,45)" fg:x="25900" fg:w="12"/><text x="26.9461%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.01%)</title><rect x="26.7590%" y="261" width="0.0113%" height="15" fill="rgb(251,115,12)" fg:x="25961" fg:w="11"/><text x="27.0090%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (10 samples, 0.01%)</title><rect x="26.7600%" y="245" width="0.0103%" height="15" fill="rgb(240,54,50)" fg:x="25962" fg:w="10"/><text x="27.0100%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (25 samples, 0.03%)</title><rect x="26.7476%" y="277" width="0.0258%" height="15" fill="rgb(233,84,52)" fg:x="25950" fg:w="25"/><text x="26.9976%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (49 samples, 0.05%)</title><rect x="26.7280%" y="293" width="0.0505%" height="15" fill="rgb(207,117,47)" fg:x="25931" fg:w="49"/><text x="26.9780%" y="303.50"></text></g><g><title>polyfight`bytes::bytes_mut::BytesMut::reserve_inner (76 samples, 0.08%)</title><rect x="26.7084%" y="357" width="0.0783%" height="15" fill="rgb(249,43,39)" fg:x="25912" fg:w="76"/><text x="26.9584%" y="367.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (71 samples, 0.07%)</title><rect x="26.7136%" y="341" width="0.0732%" height="15" fill="rgb(209,38,44)" fg:x="25917" fg:w="71"/><text x="26.9636%" y="351.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (68 samples, 0.07%)</title><rect x="26.7167%" y="325" width="0.0701%" height="15" fill="rgb(236,212,23)" fg:x="25920" fg:w="68"/><text x="26.9667%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`realloc (65 samples, 0.07%)</title><rect x="26.7198%" y="309" width="0.0670%" height="15" fill="rgb(242,79,21)" fg:x="25923" fg:w="65"/><text x="26.9698%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (12 samples, 0.01%)</title><rect x="26.8651%" y="261" width="0.0124%" height="15" fill="rgb(211,96,35)" fg:x="26064" fg:w="12"/><text x="27.1151%" y="271.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (38 samples, 0.04%)</title><rect x="26.8404%" y="325" width="0.0392%" height="15" fill="rgb(253,215,40)" fg:x="26040" fg:w="38"/><text x="27.0904%" y="335.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (34 samples, 0.04%)</title><rect x="26.8445%" y="309" width="0.0350%" height="15" fill="rgb(211,81,21)" fg:x="26044" fg:w="34"/><text x="27.0945%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (25 samples, 0.03%)</title><rect x="26.8538%" y="293" width="0.0258%" height="15" fill="rgb(208,190,38)" fg:x="26053" fg:w="25"/><text x="27.1038%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (21 samples, 0.02%)</title><rect x="26.8579%" y="277" width="0.0216%" height="15" fill="rgb(235,213,38)" fg:x="26057" fg:w="21"/><text x="27.1079%" y="287.50"></text></g><g><title>polyfight`bytes::bytes_mut::BytesMut::reserve_inner (42 samples, 0.04%)</title><rect x="26.8383%" y="341" width="0.0433%" height="15" fill="rgb(237,122,38)" fg:x="26038" fg:w="42"/><text x="27.0883%" y="351.50"></text></g><g><title>polyfight`polyfight::game::entity::tank_entity::TankEntity::take_self_census (96 samples, 0.10%)</title><rect x="26.7868%" y="357" width="0.0990%" height="15" fill="rgb(244,218,35)" fg:x="25988" fg:w="96"/><text x="27.0368%" y="367.50"></text></g><g><title>polyfight`polyfight::connection::packets::form_update_packet (2,556 samples, 2.63%)</title><rect x="24.2532%" y="373" width="2.6346%" height="15" fill="rgb(240,68,47)" fg:x="23530" fg:w="2556"/><text x="24.5032%" y="383.50">po..</text></g><g><title>polyfight`polyfight::game::entity::ai::AI::tick (40 samples, 0.04%)</title><rect x="26.8878%" y="373" width="0.0412%" height="15" fill="rgb(210,16,53)" fg:x="26086" fg:w="40"/><text x="27.1378%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (27 samples, 0.03%)</title><rect x="26.9414%" y="357" width="0.0278%" height="15" fill="rgb(235,124,12)" fg:x="26138" fg:w="27"/><text x="27.1914%" y="367.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::delete (29 samples, 0.03%)</title><rect x="26.9692%" y="357" width="0.0299%" height="15" fill="rgb(224,169,11)" fg:x="26165" fg:w="29"/><text x="27.2192%" y="367.50"></text></g><g><title>polyfight`polyfight::game::entity::base_entity::BaseEntity::tick::_{{closure}} (85 samples, 0.09%)</title><rect x="26.9342%" y="373" width="0.0876%" height="15" fill="rgb(250,166,2)" fg:x="26131" fg:w="85"/><text x="27.1842%" y="383.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::insert (22 samples, 0.02%)</title><rect x="26.9991%" y="357" width="0.0227%" height="15" fill="rgb(242,216,29)" fg:x="26194" fg:w="22"/><text x="27.2491%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (23 samples, 0.02%)</title><rect x="27.0269%" y="357" width="0.0237%" height="15" fill="rgb(230,116,27)" fg:x="26221" fg:w="23"/><text x="27.2769%" y="367.50"></text></g><g><title>polyfight`polyfight::game::entity::base_entity::BaseEntity::add_to_game_server::_{{closure}} (25 samples, 0.03%)</title><rect x="27.0507%" y="357" width="0.0258%" height="15" fill="rgb(228,99,48)" fg:x="26244" fg:w="25"/><text x="27.3007%" y="367.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::insert (10 samples, 0.01%)</title><rect x="27.0661%" y="341" width="0.0103%" height="15" fill="rgb(253,11,6)" fg:x="26259" fg:w="10"/><text x="27.3161%" y="351.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::query_radius (30 samples, 0.03%)</title><rect x="27.0919%" y="325" width="0.0309%" height="15" fill="rgb(247,143,39)" fg:x="26284" fg:w="30"/><text x="27.3419%" y="335.50"></text></g><g><title>polyfight`polyfight::game::server::GameServer::find_spawn_position (44 samples, 0.05%)</title><rect x="27.0836%" y="341" width="0.0454%" height="15" fill="rgb(236,97,10)" fg:x="26276" fg:w="44"/><text x="27.3336%" y="351.50"></text></g><g><title>polyfight`polyfight::game::entity::projectile_entity::ProjectileEntity::new::_{{closure}} (108 samples, 0.11%)</title><rect x="27.0218%" y="373" width="0.1113%" height="15" fill="rgb(233,208,19)" fg:x="26216" fg:w="108"/><text x="27.2718%" y="383.50"></text></g><g><title>polyfight`polyfight::game::entity::base_entity::BaseEntity::new (55 samples, 0.06%)</title><rect x="27.0764%" y="357" width="0.0567%" height="15" fill="rgb(216,164,2)" fg:x="26269" fg:w="55"/><text x="27.3264%" y="367.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::delete (146 samples, 0.15%)</title><rect x="27.1352%" y="373" width="0.1505%" height="15" fill="rgb(220,129,5)" fg:x="26326" fg:w="146"/><text x="27.3852%" y="383.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::insert (66 samples, 0.07%)</title><rect x="27.2857%" y="373" width="0.0680%" height="15" fill="rgb(242,17,10)" fg:x="26472" fg:w="66"/><text x="27.5357%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.01%)</title><rect x="27.9031%" y="341" width="0.0144%" height="15" fill="rgb(242,107,0)" fg:x="27071" fg:w="14"/><text x="28.1531%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (34 samples, 0.04%)</title><rect x="27.9175%" y="341" width="0.0350%" height="15" fill="rgb(251,28,31)" fg:x="27085" fg:w="34"/><text x="28.1675%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (11 samples, 0.01%)</title><rect x="27.9763%" y="325" width="0.0113%" height="15" fill="rgb(233,223,10)" fg:x="27142" fg:w="11"/><text x="28.2263%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (16 samples, 0.02%)</title><rect x="27.9979%" y="293" width="0.0165%" height="15" fill="rgb(215,21,27)" fg:x="27163" fg:w="16"/><text x="28.2479%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (24 samples, 0.02%)</title><rect x="28.0237%" y="277" width="0.0247%" height="15" fill="rgb(232,23,21)" fg:x="27188" fg:w="24"/><text x="28.2737%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (27 samples, 0.03%)</title><rect x="28.0226%" y="293" width="0.0278%" height="15" fill="rgb(244,5,23)" fg:x="27187" fg:w="27"/><text x="28.2726%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (62 samples, 0.06%)</title><rect x="27.9917%" y="309" width="0.0639%" height="15" fill="rgb(226,81,46)" fg:x="27157" fg:w="62"/><text x="28.2417%" y="319.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (163 samples, 0.17%)</title><rect x="27.8897%" y="357" width="0.1680%" height="15" fill="rgb(247,70,30)" fg:x="27058" fg:w="163"/><text x="28.1397%" y="367.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (89 samples, 0.09%)</title><rect x="27.9659%" y="341" width="0.0917%" height="15" fill="rgb(212,68,19)" fg:x="27132" fg:w="89"/><text x="28.2159%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (68 samples, 0.07%)</title><rect x="27.9876%" y="325" width="0.0701%" height="15" fill="rgb(240,187,13)" fg:x="27153" fg:w="68"/><text x="28.2376%" y="335.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::query_radius (694 samples, 0.72%)</title><rect x="27.3537%" y="373" width="0.7153%" height="15" fill="rgb(223,113,26)" fg:x="26538" fg:w="694"/><text x="27.6037%" y="383.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="28.0577%" y="357" width="0.0113%" height="15" fill="rgb(206,192,2)" fg:x="27221" fg:w="11"/><text x="28.3077%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.01%)</title><rect x="28.9462%" y="293" width="0.0134%" height="15" fill="rgb(241,108,4)" fg:x="28083" fg:w="13"/><text x="29.1962%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16 samples, 0.02%)</title><rect x="28.9678%" y="277" width="0.0165%" height="15" fill="rgb(247,173,49)" fg:x="28104" fg:w="16"/><text x="29.2178%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (26 samples, 0.03%)</title><rect x="28.9647%" y="293" width="0.0268%" height="15" fill="rgb(224,114,35)" fg:x="28101" fg:w="26"/><text x="29.2147%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (71 samples, 0.07%)</title><rect x="28.9400%" y="309" width="0.0732%" height="15" fill="rgb(245,159,27)" fg:x="28077" fg:w="71"/><text x="29.1900%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (18 samples, 0.02%)</title><rect x="28.9946%" y="293" width="0.0186%" height="15" fill="rgb(245,172,44)" fg:x="28130" fg:w="18"/><text x="29.2446%" y="303.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (96 samples, 0.10%)</title><rect x="28.9153%" y="357" width="0.0990%" height="15" fill="rgb(236,23,11)" fg:x="28053" fg:w="96"/><text x="29.1653%" y="367.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (84 samples, 0.09%)</title><rect x="28.9276%" y="341" width="0.0866%" height="15" fill="rgb(205,117,38)" fg:x="28065" fg:w="84"/><text x="29.1776%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (76 samples, 0.08%)</title><rect x="28.9359%" y="325" width="0.0783%" height="15" fill="rgb(237,72,25)" fg:x="28073" fg:w="76"/><text x="29.1859%" y="335.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::query_rect (922 samples, 0.95%)</title><rect x="28.0690%" y="373" width="0.9503%" height="15" fill="rgb(244,70,9)" fg:x="27232" fg:w="922"/><text x="28.3190%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`write (21 samples, 0.02%)</title><rect x="29.0297%" y="293" width="0.0216%" height="15" fill="rgb(217,125,39)" fg:x="28164" fg:w="21"/><text x="29.2797%" y="303.50"></text></g><g><title>polyfight`std::io::stdio::_print (25 samples, 0.03%)</title><rect x="29.0266%" y="373" width="0.0258%" height="15" fill="rgb(235,36,10)" fg:x="28161" fg:w="25"/><text x="29.2766%" y="383.50"></text></g><g><title>polyfight`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (25 samples, 0.03%)</title><rect x="29.0266%" y="357" width="0.0258%" height="15" fill="rgb(251,123,47)" fg:x="28161" fg:w="25"/><text x="29.2766%" y="367.50"></text></g><g><title>polyfight`core::fmt::write (25 samples, 0.03%)</title><rect x="29.0266%" y="341" width="0.0258%" height="15" fill="rgb(221,13,13)" fg:x="28161" fg:w="25"/><text x="29.2766%" y="351.50"></text></g><g><title>polyfight`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (23 samples, 0.02%)</title><rect x="29.0286%" y="325" width="0.0237%" height="15" fill="rgb(238,131,9)" fg:x="28163" fg:w="23"/><text x="29.2786%" y="335.50"></text></g><g><title>polyfight`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (23 samples, 0.02%)</title><rect x="29.0286%" y="309" width="0.0237%" height="15" fill="rgb(211,50,8)" fg:x="28163" fg:w="23"/><text x="29.2786%" y="319.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (29 samples, 0.03%)</title><rect x="29.0956%" y="341" width="0.0299%" height="15" fill="rgb(245,182,24)" fg:x="28228" fg:w="29"/><text x="29.3456%" y="351.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (183 samples, 0.19%)</title><rect x="29.0657%" y="357" width="0.1886%" height="15" fill="rgb(242,14,37)" fg:x="28199" fg:w="183"/><text x="29.3157%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (125 samples, 0.13%)</title><rect x="29.1255%" y="341" width="0.1288%" height="15" fill="rgb(246,228,12)" fg:x="28257" fg:w="125"/><text x="29.3755%" y="351.50"></text></g><g><title>polyfight`std::sys::pal::unix::time::Timespec::now (199 samples, 0.21%)</title><rect x="29.0534%" y="373" width="0.2051%" height="15" fill="rgb(213,55,15)" fg:x="28187" fg:w="199"/><text x="29.3034%" y="383.50"></text></g><g><title>polyfight`polyfight::game::server::GameServer::tick::_{{closure}} (14,945 samples, 15.40%)</title><rect x="13.8675%" y="389" width="15.4044%" height="15" fill="rgb(209,9,3)" fg:x="13454" fg:w="14945"/><text x="14.1175%" y="399.50">polyfight`polyfight::gam..</text></g><g><title>polyfight`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (11 samples, 0.01%)</title><rect x="29.2605%" y="373" width="0.0113%" height="15" fill="rgb(230,59,30)" fg:x="28388" fg:w="11"/><text x="29.5105%" y="383.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::insert (32 samples, 0.03%)</title><rect x="29.2781%" y="389" width="0.0330%" height="15" fill="rgb(209,121,21)" fg:x="28405" fg:w="32"/><text x="29.5281%" y="399.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::new (16 samples, 0.02%)</title><rect x="29.3111%" y="389" width="0.0165%" height="15" fill="rgb(220,109,13)" fg:x="28437" fg:w="16"/><text x="29.5611%" y="399.50"></text></g><g><title>polyfight`alloc::vec::Vec&lt;T,A&gt;::extend_with (11 samples, 0.01%)</title><rect x="29.3162%" y="373" width="0.0113%" height="15" fill="rgb(232,18,1)" fg:x="28442" fg:w="11"/><text x="29.5662%" y="383.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::query_radius (14 samples, 0.01%)</title><rect x="29.3275%" y="389" width="0.0144%" height="15" fill="rgb(215,41,42)" fg:x="28453" fg:w="14"/><text x="29.5775%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (755 samples, 0.78%)</title><rect x="29.3915%" y="357" width="0.7782%" height="15" fill="rgb(224,123,36)" fg:x="28515" fg:w="755"/><text x="29.6415%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (12 samples, 0.01%)</title><rect x="30.1789%" y="341" width="0.0124%" height="15" fill="rgb(240,125,3)" fg:x="29279" fg:w="12"/><text x="30.4289%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (12 samples, 0.01%)</title><rect x="30.1789%" y="325" width="0.0124%" height="15" fill="rgb(205,98,50)" fg:x="29279" fg:w="12"/><text x="30.4289%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (23 samples, 0.02%)</title><rect x="30.1697%" y="357" width="0.0237%" height="15" fill="rgb(205,185,37)" fg:x="29270" fg:w="23"/><text x="30.4197%" y="367.50"></text></g><g><title>polyfight`tokio::runtime::park::Inner::park (828 samples, 0.85%)</title><rect x="29.3461%" y="389" width="0.8534%" height="15" fill="rgb(238,207,15)" fg:x="28471" fg:w="828"/><text x="29.5961%" y="399.50"></text></g><g><title>polyfight`parking_lot::condvar::Condvar::wait_until_internal (797 samples, 0.82%)</title><rect x="29.3781%" y="373" width="0.8215%" height="15" fill="rgb(213,199,42)" fg:x="28502" fg:w="797"/><text x="29.6281%" y="383.50"></text></g><g><title>polyfight`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (15 samples, 0.02%)</title><rect x="30.2171%" y="373" width="0.0155%" height="15" fill="rgb(235,201,11)" fg:x="29316" fg:w="15"/><text x="30.4671%" y="383.50"></text></g><g><title>polyfight`tokio::runtime::park::CachedParkThread::block_on (29,327 samples, 30.23%)</title><rect x="0.0062%" y="405" width="30.2284%" height="15" fill="rgb(207,46,11)" fg:x="6" fg:w="29327"/><text x="0.2562%" y="415.50">polyfight`tokio::runtime::park::CachedParkThread:..</text></g><g><title>polyfight`tokio::time::interval::Interval::poll_tick (19 samples, 0.02%)</title><rect x="30.2150%" y="389" width="0.0196%" height="15" fill="rgb(241,35,35)" fg:x="29314" fg:w="19"/><text x="30.4650%" y="399.50"></text></g><g><title>dyld`start (29,336 samples, 30.24%)</title><rect x="0.0000%" y="501" width="30.2377%" height="15" fill="rgb(243,32,47)" fg:x="0" fg:w="29336"/><text x="0.2500%" y="511.50">dyld`start</text></g><g><title>polyfight`main (29,336 samples, 30.24%)</title><rect x="0.0000%" y="485" width="30.2377%" height="15" fill="rgb(247,202,23)" fg:x="0" fg:w="29336"/><text x="0.2500%" y="495.50">polyfight`main</text></g><g><title>polyfight`std::rt::lang_start_internal (29,336 samples, 30.24%)</title><rect x="0.0000%" y="469" width="30.2377%" height="15" fill="rgb(219,102,11)" fg:x="0" fg:w="29336"/><text x="0.2500%" y="479.50">polyfight`std::rt::lang_start_internal</text></g><g><title>polyfight`std::rt::lang_start::_{{closure}} (29,336 samples, 30.24%)</title><rect x="0.0000%" y="453" width="30.2377%" height="15" fill="rgb(243,110,44)" fg:x="0" fg:w="29336"/><text x="0.2500%" y="463.50">polyfight`std::rt::lang_start::_{{closure}}</text></g><g><title>polyfight`std::sys_common::backtrace::__rust_begin_short_backtrace (29,336 samples, 30.24%)</title><rect x="0.0000%" y="437" width="30.2377%" height="15" fill="rgb(222,74,54)" fg:x="0" fg:w="29336"/><text x="0.2500%" y="447.50">polyfight`std::sys_common::backtrace::__rust_begi..</text></g><g><title>polyfight`polyfight::main (29,336 samples, 30.24%)</title><rect x="0.0000%" y="421" width="30.2377%" height="15" fill="rgb(216,99,12)" fg:x="0" fg:w="29336"/><text x="0.2500%" y="431.50">polyfight`polyfight::main</text></g><g><title>libsystem_m.dylib`pow (12 samples, 0.01%)</title><rect x="30.2397%" y="325" width="0.0124%" height="15" fill="rgb(226,22,26)" fg:x="29338" fg:w="12"/><text x="30.4897%" y="335.50"></text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (10 samples, 0.01%)</title><rect x="30.2748%" y="325" width="0.0103%" height="15" fill="rgb(217,163,10)" fg:x="29372" fg:w="10"/><text x="30.5248%" y="335.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (28 samples, 0.03%)</title><rect x="30.6840%" y="309" width="0.0289%" height="15" fill="rgb(213,25,53)" fg:x="29769" fg:w="28"/><text x="30.9340%" y="319.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (16 samples, 0.02%)</title><rect x="30.7129%" y="309" width="0.0165%" height="15" fill="rgb(252,105,26)" fg:x="29797" fg:w="16"/><text x="30.9629%" y="319.50"></text></g><g><title>libsystem_m.dylib`pow (35 samples, 0.04%)</title><rect x="30.7293%" y="309" width="0.0361%" height="15" fill="rgb(220,39,43)" fg:x="29813" fg:w="35"/><text x="30.9793%" y="319.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_timebase_info (12 samples, 0.01%)</title><rect x="30.8262%" y="277" width="0.0124%" height="15" fill="rgb(229,68,48)" fg:x="29907" fg:w="12"/><text x="31.0762%" y="287.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (23 samples, 0.02%)</title><rect x="30.8386%" y="277" width="0.0237%" height="15" fill="rgb(252,8,32)" fg:x="29919" fg:w="23"/><text x="31.0886%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (10 samples, 0.01%)</title><rect x="30.8520%" y="261" width="0.0103%" height="15" fill="rgb(223,20,43)" fg:x="29932" fg:w="10"/><text x="31.1020%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (253 samples, 0.26%)</title><rect x="30.8623%" y="277" width="0.2608%" height="15" fill="rgb(229,81,49)" fg:x="29942" fg:w="253"/><text x="31.1123%" y="287.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (323 samples, 0.33%)</title><rect x="30.7963%" y="293" width="0.3329%" height="15" fill="rgb(236,28,36)" fg:x="29878" fg:w="323"/><text x="31.0463%" y="303.50"></text></g><g><title>polyfight`std::sys::pal::unix::time::Timespec::now (339 samples, 0.35%)</title><rect x="30.7881%" y="309" width="0.3494%" height="15" fill="rgb(249,185,26)" fg:x="29870" fg:w="339"/><text x="31.0381%" y="319.50"></text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (16 samples, 0.02%)</title><rect x="31.1375%" y="309" width="0.0165%" height="15" fill="rgb(249,174,33)" fg:x="30209" fg:w="16"/><text x="31.3875%" y="319.50"></text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (64 samples, 0.07%)</title><rect x="31.1571%" y="309" width="0.0660%" height="15" fill="rgb(233,201,37)" fg:x="30228" fg:w="64"/><text x="31.4071%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (18 samples, 0.02%)</title><rect x="31.2746%" y="277" width="0.0186%" height="15" fill="rgb(221,78,26)" fg:x="30342" fg:w="18"/><text x="31.5246%" y="287.50"></text></g><g><title>polyfight`parking_lot::condvar::Condvar::notify_one_slow (19 samples, 0.02%)</title><rect x="31.2746%" y="293" width="0.0196%" height="15" fill="rgb(250,127,30)" fg:x="30342" fg:w="19"/><text x="31.5246%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (732 samples, 0.75%)</title><rect x="31.5869%" y="261" width="0.7545%" height="15" fill="rgb(230,49,44)" fg:x="30645" fg:w="732"/><text x="31.8369%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (41 samples, 0.04%)</title><rect x="32.3548%" y="229" width="0.0423%" height="15" fill="rgb(229,67,23)" fg:x="31390" fg:w="41"/><text x="32.6048%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (43 samples, 0.04%)</title><rect x="32.3538%" y="245" width="0.0443%" height="15" fill="rgb(249,83,47)" fg:x="31389" fg:w="43"/><text x="32.6038%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (62 samples, 0.06%)</title><rect x="32.3414%" y="261" width="0.0639%" height="15" fill="rgb(215,43,3)" fg:x="31377" fg:w="62"/><text x="32.5914%" y="271.50"></text></g><g><title>polyfight`parking_lot::condvar::Condvar::wait_until_internal (813 samples, 0.84%)</title><rect x="31.5735%" y="277" width="0.8380%" height="15" fill="rgb(238,154,13)" fg:x="30632" fg:w="813"/><text x="31.8235%" y="287.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (17 samples, 0.02%)</title><rect x="32.4960%" y="261" width="0.0175%" height="15" fill="rgb(219,56,2)" fg:x="31527" fg:w="17"/><text x="32.7460%" y="271.50"></text></g><g><title>polyfight`&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.03%)</title><rect x="32.5136%" y="261" width="0.0340%" height="15" fill="rgb(233,0,4)" fg:x="31544" fg:w="33"/><text x="32.7636%" y="271.50"></text></g><g><title>libsystem_c.dylib`DYLD-STUB$$mach_timebase_info (17 samples, 0.02%)</title><rect x="32.6146%" y="229" width="0.0175%" height="15" fill="rgb(235,30,7)" fg:x="31642" fg:w="17"/><text x="32.8646%" y="239.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (24 samples, 0.02%)</title><rect x="32.6321%" y="229" width="0.0247%" height="15" fill="rgb(250,79,13)" fg:x="31659" fg:w="24"/><text x="32.8821%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (13 samples, 0.01%)</title><rect x="32.6434%" y="213" width="0.0134%" height="15" fill="rgb(211,146,34)" fg:x="31670" fg:w="13"/><text x="32.8934%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (285 samples, 0.29%)</title><rect x="32.6568%" y="229" width="0.2938%" height="15" fill="rgb(228,22,38)" fg:x="31683" fg:w="285"/><text x="32.9068%" y="239.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (372 samples, 0.38%)</title><rect x="32.5785%" y="245" width="0.3834%" height="15" fill="rgb(235,168,5)" fg:x="31607" fg:w="372"/><text x="32.8285%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_timebase_info (11 samples, 0.01%)</title><rect x="32.9506%" y="229" width="0.0113%" height="15" fill="rgb(221,155,16)" fg:x="31968" fg:w="11"/><text x="33.2006%" y="239.50"></text></g><g><title>polyfight`std::sys::pal::unix::time::Timespec::now (391 samples, 0.40%)</title><rect x="32.5661%" y="261" width="0.4030%" height="15" fill="rgb(215,215,53)" fg:x="31595" fg:w="391"/><text x="32.8161%" y="271.50"></text></g><g><title>polyfight`std::time::Instant::checked_duration_since (16 samples, 0.02%)</title><rect x="32.9702%" y="261" width="0.0165%" height="15" fill="rgb(223,4,10)" fg:x="31987" fg:w="16"/><text x="33.2202%" y="271.50"></text></g><g><title>polyfight`std::sys::pal::unix::time::Timespec::sub_timespec (12 samples, 0.01%)</title><rect x="32.9743%" y="245" width="0.0124%" height="15" fill="rgb(234,103,6)" fg:x="31991" fg:w="12"/><text x="33.2243%" y="255.50"></text></g><g><title>polyfight`tokio::process::imp::GlobalOrphanQueue::reap_orphans (39 samples, 0.04%)</title><rect x="32.9877%" y="261" width="0.0402%" height="15" fill="rgb(227,97,0)" fg:x="32004" fg:w="39"/><text x="33.2377%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`kevent (10,972 samples, 11.31%)</title><rect x="33.1763%" y="245" width="11.3092%" height="15" fill="rgb(234,150,53)" fg:x="32187" fg:w="10972"/><text x="33.4263%" y="255.50">libsystem_kernel...</text></g><g><title>polyfight`futures_task::waker::wake_arc_raw (14 samples, 0.01%)</title><rect x="44.4876%" y="245" width="0.0144%" height="15" fill="rgb(228,201,54)" fg:x="43161" fg:w="14"/><text x="44.7376%" y="255.50"></text></g><g><title>polyfight`mio::poll::Poll::poll (36 samples, 0.04%)</title><rect x="44.5021%" y="245" width="0.0371%" height="15" fill="rgb(222,22,37)" fg:x="43175" fg:w="36"/><text x="44.7521%" y="255.50"></text></g><g><title>polyfight`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (16 samples, 0.02%)</title><rect x="44.6453%" y="229" width="0.0165%" height="15" fill="rgb(237,53,32)" fg:x="43314" fg:w="16"/><text x="44.8953%" y="239.50"></text></g><g><title>polyfight`tokio::runtime::task::raw::schedule (16 samples, 0.02%)</title><rect x="44.6690%" y="197" width="0.0165%" height="15" fill="rgb(233,25,53)" fg:x="43337" fg:w="16"/><text x="44.9190%" y="207.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (17 samples, 0.02%)</title><rect x="44.7103%" y="165" width="0.0175%" height="15" fill="rgb(210,40,34)" fg:x="43377" fg:w="17"/><text x="44.9603%" y="175.50"></text></g><g><title>polyfight`tokio::runtime::context::with_scheduler (64 samples, 0.07%)</title><rect x="44.7278%" y="165" width="0.0660%" height="15" fill="rgb(241,220,44)" fg:x="43394" fg:w="64"/><text x="44.9778%" y="175.50"></text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (21 samples, 0.02%)</title><rect x="44.7721%" y="149" width="0.0216%" height="15" fill="rgb(235,28,35)" fg:x="43437" fg:w="21"/><text x="45.0221%" y="159.50"></text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (93 samples, 0.10%)</title><rect x="44.7030%" y="181" width="0.0959%" height="15" fill="rgb(210,56,17)" fg:x="43370" fg:w="93"/><text x="44.9530%" y="191.50"></text></g><g><title>polyfight`&lt;tokio_tungstenite::compat::WakerProxy as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (165 samples, 0.17%)</title><rect x="44.6659%" y="213" width="0.1701%" height="15" fill="rgb(224,130,29)" fg:x="43334" fg:w="165"/><text x="44.9159%" y="223.50"></text></g><g><title>polyfight`tokio::runtime::task::waker::wake_by_val (140 samples, 0.14%)</title><rect x="44.6917%" y="197" width="0.1443%" height="15" fill="rgb(235,212,8)" fg:x="43359" fg:w="140"/><text x="44.9417%" y="207.50"></text></g><g><title>polyfight`tokio::runtime::task::state::State::transition_to_notified_by_val (36 samples, 0.04%)</title><rect x="44.7989%" y="181" width="0.0371%" height="15" fill="rgb(223,33,50)" fg:x="43463" fg:w="36"/><text x="45.0489%" y="191.50"></text></g><g><title>polyfight`futures_core::task::__internal::atomic_waker::AtomicWaker::wake (34 samples, 0.04%)</title><rect x="44.8360%" y="213" width="0.0350%" height="15" fill="rgb(219,149,13)" fg:x="43499" fg:w="34"/><text x="45.0860%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (801 samples, 0.83%)</title><rect x="44.9236%" y="181" width="0.8256%" height="15" fill="rgb(250,156,29)" fg:x="43584" fg:w="801"/><text x="45.1736%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_updateval (19 samples, 0.02%)</title><rect x="45.7492%" y="181" width="0.0196%" height="15" fill="rgb(216,193,19)" fg:x="44385" fg:w="19"/><text x="45.9992%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (11 samples, 0.01%)</title><rect x="45.7812%" y="181" width="0.0113%" height="15" fill="rgb(216,135,14)" fg:x="44416" fg:w="11"/><text x="46.0312%" y="191.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (65 samples, 0.07%)</title><rect x="45.8049%" y="165" width="0.0670%" height="15" fill="rgb(241,47,5)" fg:x="44439" fg:w="65"/><text x="46.0549%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (60 samples, 0.06%)</title><rect x="45.8101%" y="149" width="0.0618%" height="15" fill="rgb(233,42,35)" fg:x="44444" fg:w="60"/><text x="46.0601%" y="159.50"></text></g><g><title>polyfight`parking_lot::condvar::Condvar::notify_one_slow (941 samples, 0.97%)</title><rect x="44.9040%" y="197" width="0.9699%" height="15" fill="rgb(231,13,6)" fg:x="43565" fg:w="941"/><text x="45.1540%" y="207.50"></text></g><g><title>polyfight`std::sys::pal::unix::time::Timespec::now (70 samples, 0.07%)</title><rect x="45.8018%" y="181" width="0.0722%" height="15" fill="rgb(207,181,40)" fg:x="44436" fg:w="70"/><text x="46.0518%" y="191.50"></text></g><g><title>polyfight`tokio::runtime::park::wake (972 samples, 1.00%)</title><rect x="44.8752%" y="213" width="1.0019%" height="15" fill="rgb(254,173,49)" fg:x="43537" fg:w="972"/><text x="45.1252%" y="223.50"></text></g><g><title>polyfight`futures_task::waker::wake_arc_raw (1,188 samples, 1.22%)</title><rect x="44.6618%" y="229" width="1.2245%" height="15" fill="rgb(221,1,38)" fg:x="43330" fg:w="1188"/><text x="44.9118%" y="239.50"></text></g><g><title>polyfight`tokio::runtime::io::driver::Driver::turn (12,478 samples, 12.86%)</title><rect x="33.0279%" y="261" width="12.8615%" height="15" fill="rgb(206,124,46)" fg:x="32043" fg:w="12478"/><text x="33.2779%" y="271.50">polyfight`tokio::ru..</text></g><g><title>polyfight`tokio::runtime::io::scheduled_io::ScheduledIo::wake (1,310 samples, 1.35%)</title><rect x="44.5392%" y="245" width="1.3503%" height="15" fill="rgb(249,21,11)" fg:x="43211" fg:w="1310"/><text x="44.7892%" y="255.50"></text></g><g><title>polyfight`tokio::runtime::io::scheduled_io::ScheduledIo::wake (34 samples, 0.04%)</title><rect x="45.8894%" y="261" width="0.0350%" height="15" fill="rgb(222,201,40)" fg:x="44521" fg:w="34"/><text x="46.1394%" y="271.50"></text></g><g><title>polyfight`core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt; (140 samples, 0.14%)</title><rect x="45.9698%" y="245" width="0.1443%" height="15" fill="rgb(235,61,29)" fg:x="44599" fg:w="140"/><text x="46.2198%" y="255.50"></text></g><g><title> 32]&gt; (140 samples, 0.14%)</title><rect x="45.9698%" y="229" width="0.1443%" height="15" fill="rgb(219,207,3)" fg:x="44599" fg:w="140"/><text x="46.2198%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (16 samples, 0.02%)</title><rect x="46.1162%" y="213" width="0.0165%" height="15" fill="rgb(222,56,46)" fg:x="44741" fg:w="16"/><text x="46.3662%" y="223.50"></text></g><g><title>polyfight`tokio::runtime::park::wake (19 samples, 0.02%)</title><rect x="46.1141%" y="245" width="0.0196%" height="15" fill="rgb(239,76,54)" fg:x="44739" fg:w="19"/><text x="46.3641%" y="255.50"></text></g><g><title>polyfight`parking_lot::condvar::Condvar::notify_one_slow (19 samples, 0.02%)</title><rect x="46.1141%" y="229" width="0.0196%" height="15" fill="rgb(231,124,27)" fg:x="44739" fg:w="19"/><text x="46.3641%" y="239.50"></text></g><g><title>polyfight`tokio::runtime::time::wheel::Wheel::next_expiration (37 samples, 0.04%)</title><rect x="46.1337%" y="245" width="0.0381%" height="15" fill="rgb(249,195,6)" fg:x="44758" fg:w="37"/><text x="46.3837%" y="255.50"></text></g><g><title>polyfight`tokio::runtime::time::wheel::Wheel::next_expiration (69 samples, 0.07%)</title><rect x="46.2079%" y="229" width="0.0711%" height="15" fill="rgb(237,174,47)" fg:x="44830" fg:w="69"/><text x="46.4579%" y="239.50"></text></g><g><title>polyfight`tokio::runtime::time::wheel::Wheel::poll (136 samples, 0.14%)</title><rect x="46.1718%" y="245" width="0.1402%" height="15" fill="rgb(206,201,31)" fg:x="44795" fg:w="136"/><text x="46.4218%" y="255.50"></text></g><g><title>polyfight`tokio::runtime::time::wheel::level::Level::next_expiration (32 samples, 0.03%)</title><rect x="46.2790%" y="229" width="0.0330%" height="15" fill="rgb(231,57,52)" fg:x="44899" fg:w="32"/><text x="46.5290%" y="239.50"></text></g><g><title>polyfight`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (394 samples, 0.41%)</title><rect x="45.9307%" y="261" width="0.4061%" height="15" fill="rgb(248,177,22)" fg:x="44561" fg:w="394"/><text x="46.1807%" y="271.50"></text></g><g><title>polyfight`tokio::runtime::time::wheel::level::Level::next_expiration (24 samples, 0.02%)</title><rect x="46.3120%" y="245" width="0.0247%" height="15" fill="rgb(215,211,37)" fg:x="44931" fg:w="24"/><text x="46.5620%" y="255.50"></text></g><g><title>polyfight`tokio::runtime::time::wheel::Wheel::next_expiration (29 samples, 0.03%)</title><rect x="46.3368%" y="261" width="0.0299%" height="15" fill="rgb(241,128,51)" fg:x="44955" fg:w="29"/><text x="46.5868%" y="271.50"></text></g><g><title>polyfight`tokio::runtime::time::Driver::park_internal (13,541 samples, 13.96%)</title><rect x="32.4424%" y="277" width="13.9572%" height="15" fill="rgb(227,165,31)" fg:x="31475" fg:w="13541"/><text x="32.6924%" y="287.50">polyfight`tokio::runt..</text></g><g><title>polyfight`tokio::runtime::time::wheel::level::Level::next_expiration (25 samples, 0.03%)</title><rect x="46.3739%" y="261" width="0.0258%" height="15" fill="rgb(228,167,24)" fg:x="44991" fg:w="25"/><text x="46.6239%" y="271.50"></text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::park::Parker::park (14,667 samples, 15.12%)</title><rect x="31.2963%" y="293" width="15.1178%" height="15" fill="rgb(228,143,12)" fg:x="30363" fg:w="14667"/><text x="31.5463%" y="303.50">polyfight`tokio::runtim..</text></g><g><title>polyfight`std::sys::pal::unix::time::Timespec::now (12 samples, 0.01%)</title><rect x="46.4244%" y="277" width="0.0124%" height="15" fill="rgb(249,149,8)" fg:x="45040" fg:w="12"/><text x="46.6744%" y="287.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (11 samples, 0.01%)</title><rect x="46.4254%" y="261" width="0.0113%" height="15" fill="rgb(243,35,44)" fg:x="45041" fg:w="11"/><text x="46.6754%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`kevent (239 samples, 0.25%)</title><rect x="46.4388%" y="261" width="0.2463%" height="15" fill="rgb(246,89,9)" fg:x="45054" fg:w="239"/><text x="46.6888%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (19 samples, 0.02%)</title><rect x="46.6934%" y="197" width="0.0196%" height="15" fill="rgb(233,213,13)" fg:x="45301" fg:w="19"/><text x="46.9434%" y="207.50"></text></g><g><title>polyfight`tokio::runtime::io::driver::Driver::turn (268 samples, 0.28%)</title><rect x="46.4378%" y="277" width="0.2762%" height="15" fill="rgb(233,141,41)" fg:x="45053" fg:w="268"/><text x="46.6878%" y="287.50"></text></g><g><title>polyfight`tokio::runtime::io::scheduled_io::ScheduledIo::wake (27 samples, 0.03%)</title><rect x="46.6862%" y="261" width="0.0278%" height="15" fill="rgb(239,167,4)" fg:x="45294" fg:w="27"/><text x="46.9362%" y="271.50"></text></g><g><title>polyfight`futures_task::waker::wake_arc_raw (26 samples, 0.03%)</title><rect x="46.6872%" y="245" width="0.0268%" height="15" fill="rgb(209,217,16)" fg:x="45295" fg:w="26"/><text x="46.9372%" y="255.50"></text></g><g><title>polyfight`tokio::runtime::park::wake (20 samples, 0.02%)</title><rect x="46.6934%" y="229" width="0.0206%" height="15" fill="rgb(219,88,35)" fg:x="45301" fg:w="20"/><text x="46.9434%" y="239.50"></text></g><g><title>polyfight`parking_lot::condvar::Condvar::notify_one_slow (20 samples, 0.02%)</title><rect x="46.6934%" y="213" width="0.0206%" height="15" fill="rgb(220,193,23)" fg:x="45301" fg:w="20"/><text x="46.9434%" y="223.50"></text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (15,039 samples, 15.50%)</title><rect x="31.2231%" y="309" width="15.5012%" height="15" fill="rgb(230,90,52)" fg:x="30292" fg:w="15039"/><text x="31.4731%" y="319.50">polyfight`tokio::runtime..</text></g><g><title>polyfight`tokio::runtime::time::Driver::park_internal (300 samples, 0.31%)</title><rect x="46.4151%" y="293" width="0.3092%" height="15" fill="rgb(252,106,19)" fg:x="45031" fg:w="300"/><text x="46.6651%" y="303.50"></text></g><g><title>polyfight`tokio::runtime::time::_&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_time (10 samples, 0.01%)</title><rect x="46.7140%" y="277" width="0.0103%" height="15" fill="rgb(206,74,20)" fg:x="45321" fg:w="10"/><text x="46.9640%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (240 samples, 0.25%)</title><rect x="46.7954%" y="277" width="0.2474%" height="15" fill="rgb(230,138,44)" fg:x="45400" fg:w="240"/><text x="47.0454%" y="287.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (11 samples, 0.01%)</title><rect x="47.0614%" y="261" width="0.0113%" height="15" fill="rgb(235,182,43)" fg:x="45658" fg:w="11"/><text x="47.3114%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (11 samples, 0.01%)</title><rect x="47.0614%" y="245" width="0.0113%" height="15" fill="rgb(242,16,51)" fg:x="45658" fg:w="11"/><text x="47.3114%" y="255.50"></text></g><g><title>polyfight`parking_lot::condvar::Condvar::notify_one_slow (277 samples, 0.29%)</title><rect x="46.7882%" y="293" width="0.2855%" height="15" fill="rgb(248,9,4)" fg:x="45393" fg:w="277"/><text x="47.0382%" y="303.50"></text></g><g><title>polyfight`std::sys::pal::unix::time::Timespec::now (12 samples, 0.01%)</title><rect x="47.0614%" y="277" width="0.0124%" height="15" fill="rgb(210,31,22)" fg:x="45658" fg:w="12"/><text x="47.3114%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`kevent (39 samples, 0.04%)</title><rect x="47.0737%" y="277" width="0.0402%" height="15" fill="rgb(239,54,39)" fg:x="45670" fg:w="39"/><text x="47.3237%" y="287.50"></text></g><g><title>polyfight`tokio::runtime::driver::Handle::unpark (40 samples, 0.04%)</title><rect x="47.0737%" y="293" width="0.0412%" height="15" fill="rgb(230,99,41)" fg:x="45670" fg:w="40"/><text x="47.3237%" y="303.50"></text></g><g><title>polyfight`axum::extract::ws::WebSocketUpgrade&lt;F&gt;::on_upgrade::_{{closure}} (13 samples, 0.01%)</title><rect x="47.1510%" y="277" width="0.0134%" height="15" fill="rgb(253,106,12)" fg:x="45745" fg:w="13"/><text x="47.4010%" y="287.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (26 samples, 0.03%)</title><rect x="47.1789%" y="261" width="0.0268%" height="15" fill="rgb(213,46,41)" fg:x="45772" fg:w="26"/><text x="47.4289%" y="271.50"></text></g><g><title>polyfight`&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (25 samples, 0.03%)</title><rect x="47.2067%" y="261" width="0.0258%" height="15" fill="rgb(215,133,35)" fg:x="45799" fg:w="25"/><text x="47.4567%" y="271.50"></text></g><g><title>libsystem_m.dylib`atan2f (74 samples, 0.08%)</title><rect x="47.2685%" y="245" width="0.0763%" height="15" fill="rgb(213,28,5)" fg:x="45859" fg:w="74"/><text x="47.5185%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.04%)</title><rect x="47.3448%" y="245" width="0.0402%" height="15" fill="rgb(215,77,49)" fg:x="45933" fg:w="39"/><text x="47.5948%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (42 samples, 0.04%)</title><rect x="47.3850%" y="245" width="0.0433%" height="15" fill="rgb(248,100,22)" fg:x="45972" fg:w="42"/><text x="47.6350%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (114 samples, 0.12%)</title><rect x="47.4283%" y="245" width="0.1175%" height="15" fill="rgb(208,67,9)" fg:x="46014" fg:w="114"/><text x="47.6783%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (99 samples, 0.10%)</title><rect x="47.5510%" y="245" width="0.1020%" height="15" fill="rgb(219,133,21)" fg:x="46133" fg:w="99"/><text x="47.8010%" y="255.50"></text></g><g><title>polyfight`&lt;bytes::bytes_mut::BytesMut as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (10 samples, 0.01%)</title><rect x="47.6540%" y="245" width="0.0103%" height="15" fill="rgb(246,46,29)" fg:x="46233" fg:w="10"/><text x="47.9040%" y="255.50"></text></g><g><title>polyfight`&lt;tokio::sync::mutex::Mutex&lt;T&gt; as polyfight::utils::timed_mutex::AsyncTimedLock&lt;T&gt;&gt;::lock_with_timeout::_{{closure}} (28 samples, 0.03%)</title><rect x="47.6644%" y="245" width="0.0289%" height="15" fill="rgb(246,185,52)" fg:x="46243" fg:w="28"/><text x="47.9144%" y="255.50"></text></g><g><title>polyfight`DYLD-STUB$$free (26 samples, 0.03%)</title><rect x="47.6953%" y="245" width="0.0268%" height="15" fill="rgb(252,136,11)" fg:x="46273" fg:w="26"/><text x="47.9453%" y="255.50"></text></g><g><title>polyfight`__rdl_alloc (17 samples, 0.02%)</title><rect x="47.7272%" y="245" width="0.0175%" height="15" fill="rgb(219,138,53)" fg:x="46304" fg:w="17"/><text x="47.9772%" y="255.50"></text></g><g><title>polyfight`futures_util::stream::stream::StreamExt::poll_next_unpin (13 samples, 0.01%)</title><rect x="47.7736%" y="245" width="0.0134%" height="15" fill="rgb(211,51,23)" fg:x="46349" fg:w="13"/><text x="48.0236%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (11 samples, 0.01%)</title><rect x="48.1282%" y="229" width="0.0113%" height="15" fill="rgb(247,221,28)" fg:x="46693" fg:w="11"/><text x="48.3782%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (35 samples, 0.04%)</title><rect x="48.1395%" y="229" width="0.0361%" height="15" fill="rgb(251,222,45)" fg:x="46704" fg:w="35"/><text x="48.3895%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (240 samples, 0.25%)</title><rect x="48.1756%" y="229" width="0.2474%" height="15" fill="rgb(217,162,53)" fg:x="46739" fg:w="240"/><text x="48.4256%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.02%)</title><rect x="48.4230%" y="229" width="0.0165%" height="15" fill="rgb(229,93,14)" fg:x="46979" fg:w="16"/><text x="48.6730%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (61 samples, 0.06%)</title><rect x="48.4436%" y="229" width="0.0629%" height="15" fill="rgb(209,67,49)" fg:x="46999" fg:w="61"/><text x="48.6936%" y="239.50"></text></g><g><title>libsystem_platform.dylib`__bzero (13 samples, 0.01%)</title><rect x="48.5065%" y="229" width="0.0134%" height="15" fill="rgb(213,87,29)" fg:x="47060" fg:w="13"/><text x="48.7565%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (30 samples, 0.03%)</title><rect x="48.5199%" y="229" width="0.0309%" height="15" fill="rgb(205,151,52)" fg:x="47073" fg:w="30"/><text x="48.7699%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (27 samples, 0.03%)</title><rect x="48.5508%" y="229" width="0.0278%" height="15" fill="rgb(253,215,39)" fg:x="47103" fg:w="27"/><text x="48.8008%" y="239.50"></text></g><g><title>polyfight`&lt;axum::extract::ws::WebSocket as futures_core::stream::Stream&gt;::poll_next (19 samples, 0.02%)</title><rect x="48.5786%" y="229" width="0.0196%" height="15" fill="rgb(221,220,41)" fg:x="47130" fg:w="19"/><text x="48.8286%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (43 samples, 0.04%)</title><rect x="48.6332%" y="213" width="0.0443%" height="15" fill="rgb(218,133,21)" fg:x="47183" fg:w="43"/><text x="48.8832%" y="223.50"></text></g><g><title>polyfight`&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (78 samples, 0.08%)</title><rect x="48.5992%" y="229" width="0.0804%" height="15" fill="rgb(221,193,43)" fg:x="47150" fg:w="78"/><text x="48.8492%" y="239.50"></text></g><g><title>polyfight`&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (41 samples, 0.04%)</title><rect x="48.6796%" y="229" width="0.0423%" height="15" fill="rgb(240,128,52)" fg:x="47228" fg:w="41"/><text x="48.9296%" y="239.50"></text></g><g><title>polyfight`&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="48.7219%" y="229" width="0.0134%" height="15" fill="rgb(253,114,12)" fg:x="47269" fg:w="13"/><text x="48.9719%" y="239.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (56 samples, 0.06%)</title><rect x="48.8311%" y="213" width="0.0577%" height="15" fill="rgb(215,223,47)" fg:x="47375" fg:w="56"/><text x="49.0811%" y="223.50"></text></g><g><title>polyfight`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (11 samples, 0.01%)</title><rect x="49.1816%" y="197" width="0.0113%" height="15" fill="rgb(248,225,23)" fg:x="47715" fg:w="11"/><text x="49.4316%" y="207.50"></text></g><g><title>polyfight`&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (297 samples, 0.31%)</title><rect x="48.8889%" y="213" width="0.3061%" height="15" fill="rgb(250,108,0)" fg:x="47431" fg:w="297"/><text x="49.1389%" y="223.50"></text></g><g><title>polyfight`&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="49.1950%" y="213" width="0.0206%" height="15" fill="rgb(228,208,7)" fg:x="47728" fg:w="20"/><text x="49.4450%" y="223.50"></text></g><g><title>polyfight`&lt;tokio::sync::mutex::Mutex&lt;T&gt; as polyfight::utils::timed_mutex::AsyncTimedLock&lt;T&gt;&gt;::lock_with_timeout::_{{closure}} (473 samples, 0.49%)</title><rect x="48.7353%" y="229" width="0.4875%" height="15" fill="rgb(244,45,10)" fg:x="47282" fg:w="473"/><text x="48.9853%" y="239.50"></text></g><g><title>polyfight`__rdl_dealloc (20 samples, 0.02%)</title><rect x="49.2362%" y="229" width="0.0206%" height="15" fill="rgb(207,125,25)" fg:x="47768" fg:w="20"/><text x="49.4862%" y="239.50"></text></g><g><title>polyfight`bytes::bytes_mut::BytesMut::set_start (15 samples, 0.02%)</title><rect x="49.2599%" y="229" width="0.0155%" height="15" fill="rgb(210,195,18)" fg:x="47791" fg:w="15"/><text x="49.5099%" y="239.50"></text></g><g><title>polyfight`bytes::bytes_mut::BytesMut::split_to (79 samples, 0.08%)</title><rect x="49.2754%" y="229" width="0.0814%" height="15" fill="rgb(249,80,12)" fg:x="47806" fg:w="79"/><text x="49.5254%" y="239.50"></text></g><g><title>polyfight`core::ptr::drop_in_place&lt;&lt;tokio::sync::mutex::Mutex&lt;polyfight::server::WebSocketServer&gt; as polyfight::utils::timed_mutex::AsyncTimedLock&lt;polyfight::server::WebSocketServer&gt;&gt;::lock_with_timeout::{{closure}}&gt; (14 samples, 0.01%)</title><rect x="49.3568%" y="229" width="0.0144%" height="15" fill="rgb(221,65,9)" fg:x="47885" fg:w="14"/><text x="49.6068%" y="239.50"></text></g><g><title>polyfight`core::ptr::drop_in_place&lt;polyfight::connection::wss::on_message::{{closure}}&gt; (23 samples, 0.02%)</title><rect x="49.3713%" y="229" width="0.0237%" height="15" fill="rgb(235,49,36)" fg:x="47899" fg:w="23"/><text x="49.6213%" y="239.50"></text></g><g><title>polyfight`futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (20 samples, 0.02%)</title><rect x="49.3950%" y="229" width="0.0206%" height="15" fill="rgb(225,32,20)" fg:x="47922" fg:w="20"/><text x="49.6450%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (12 samples, 0.01%)</title><rect x="49.5176%" y="181" width="0.0124%" height="15" fill="rgb(215,141,46)" fg:x="48041" fg:w="12"/><text x="49.7676%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.03%)</title><rect x="49.5300%" y="181" width="0.0258%" height="15" fill="rgb(250,160,47)" fg:x="48053" fg:w="25"/><text x="49.7800%" y="191.50"></text></g><g><title>polyfight`futures_core::task::__internal::atomic_waker::AtomicWaker::register (121 samples, 0.12%)</title><rect x="49.5712%" y="181" width="0.1247%" height="15" fill="rgb(216,222,40)" fg:x="48093" fg:w="121"/><text x="49.8212%" y="191.50"></text></g><g><title>polyfight`tokio_tungstenite::compat::cvt (15 samples, 0.02%)</title><rect x="49.7093%" y="181" width="0.0155%" height="15" fill="rgb(234,217,39)" fg:x="48227" fg:w="15"/><text x="49.9593%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (51 samples, 0.05%)</title><rect x="49.9382%" y="165" width="0.0526%" height="15" fill="rgb(207,178,40)" fg:x="48449" fg:w="51"/><text x="50.1882%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (49 samples, 0.05%)</title><rect x="49.9907%" y="165" width="0.0505%" height="15" fill="rgb(221,136,13)" fg:x="48500" fg:w="49"/><text x="50.2407%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (45 samples, 0.05%)</title><rect x="50.0505%" y="165" width="0.0464%" height="15" fill="rgb(249,199,10)" fg:x="48558" fg:w="45"/><text x="50.3005%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (10 samples, 0.01%)</title><rect x="50.0969%" y="165" width="0.0103%" height="15" fill="rgb(249,222,13)" fg:x="48603" fg:w="10"/><text x="50.3469%" y="175.50"></text></g><g><title>polyfight`DYLD-STUB$$malloc (10 samples, 0.01%)</title><rect x="50.1072%" y="165" width="0.0103%" height="15" fill="rgb(244,185,38)" fg:x="48613" fg:w="10"/><text x="50.3572%" y="175.50"></text></g><g><title>polyfight`std::io::default_read_to_end (12 samples, 0.01%)</title><rect x="50.1391%" y="165" width="0.0124%" height="15" fill="rgb(236,202,9)" fg:x="48644" fg:w="12"/><text x="50.3891%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (172 samples, 0.18%)</title><rect x="50.3690%" y="149" width="0.1773%" height="15" fill="rgb(250,229,37)" fg:x="48867" fg:w="172"/><text x="50.6190%" y="159.50"></text></g><g><title>polyfight`&lt;tungstenite::protocol::frame::coding::OpCode as core::convert::From&lt;u8&gt;&gt;::from (19 samples, 0.02%)</title><rect x="50.5535%" y="149" width="0.0196%" height="15" fill="rgb(206,174,23)" fg:x="49046" fg:w="19"/><text x="50.8035%" y="159.50"></text></g><g><title>polyfight`DYLD-STUB$$memcpy (24 samples, 0.02%)</title><rect x="50.5731%" y="149" width="0.0247%" height="15" fill="rgb(211,33,43)" fg:x="49065" fg:w="24"/><text x="50.8231%" y="159.50"></text></g><g><title>polyfight`std::io::default_read_to_end (57 samples, 0.06%)</title><rect x="50.5978%" y="149" width="0.0588%" height="15" fill="rgb(245,58,50)" fg:x="49089" fg:w="57"/><text x="50.8478%" y="159.50"></text></g><g><title>polyfight`&lt;hyper::common::io::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (13 samples, 0.01%)</title><rect x="50.6885%" y="133" width="0.0134%" height="15" fill="rgb(244,68,36)" fg:x="49177" fg:w="13"/><text x="50.9385%" y="143.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (40 samples, 0.04%)</title><rect x="50.9472%" y="53" width="0.0412%" height="15" fill="rgb(232,229,15)" fg:x="49428" fg:w="40"/><text x="51.1972%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`__recvfrom (14,169 samples, 14.60%)</title><rect x="51.0153%" y="37" width="14.6045%" height="15" fill="rgb(254,30,23)" fg:x="49494" fg:w="14169"/><text x="51.2653%" y="47.50">libsystem_kernel.dylib..</text></g><g><title>polyfight`&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (33 samples, 0.03%)</title><rect x="65.6198%" y="37" width="0.0340%" height="15" fill="rgb(235,160,14)" fg:x="63663" fg:w="33"/><text x="65.8698%" y="47.50"></text></g><g><title>polyfight`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (14,232 samples, 14.67%)</title><rect x="50.9885%" y="53" width="14.6694%" height="15" fill="rgb(212,155,44)" fg:x="49468" fg:w="14232"/><text x="51.2385%" y="63.50">polyfight`&lt;&amp;mio::net::..</text></g><g><title>polyfight`futures_task::waker::clone_arc_raw (14 samples, 0.01%)</title><rect x="65.7507%" y="37" width="0.0144%" height="15" fill="rgb(226,2,50)" fg:x="63790" fg:w="14"/><text x="66.0007%" y="47.50"></text></g><g><title>polyfight`tokio::runtime::io::registration::Registration::poll_ready (135 samples, 0.14%)</title><rect x="65.6610%" y="53" width="0.1391%" height="15" fill="rgb(234,177,6)" fg:x="63703" fg:w="135"/><text x="65.9110%" y="63.50"></text></g><g><title>polyfight`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (34 samples, 0.04%)</title><rect x="65.7651%" y="37" width="0.0350%" height="15" fill="rgb(217,24,9)" fg:x="63804" fg:w="34"/><text x="66.0151%" y="47.50"></text></g><g><title>polyfight`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (14,499 samples, 14.94%)</title><rect x="50.8710%" y="69" width="14.9446%" height="15" fill="rgb(220,13,46)" fg:x="49354" fg:w="14499"/><text x="51.1210%" y="79.50">polyfight`tokio::io::po..</text></g><g><title>polyfight`tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (15 samples, 0.02%)</title><rect x="65.8002%" y="53" width="0.0155%" height="15" fill="rgb(239,221,27)" fg:x="63838" fg:w="15"/><text x="66.0502%" y="63.50"></text></g><g><title>polyfight`&lt;hyper_util::rt::tokio::TokioIo&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (14,610 samples, 15.06%)</title><rect x="50.7700%" y="85" width="15.0591%" height="15" fill="rgb(222,198,25)" fg:x="49256" fg:w="14610"/><text x="51.0200%" y="95.50">polyfight`&lt;hyper_util::..</text></g><g><title>polyfight`tokio::runtime::io::registration::Registration::poll_ready (13 samples, 0.01%)</title><rect x="65.8156%" y="69" width="0.0134%" height="15" fill="rgb(211,99,13)" fg:x="63853" fg:w="13"/><text x="66.0656%" y="79.50"></text></g><g><title>polyfight`&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (14,647 samples, 15.10%)</title><rect x="50.7452%" y="101" width="15.0972%" height="15" fill="rgb(232,111,31)" fg:x="49232" fg:w="14647"/><text x="50.9952%" y="111.50">polyfight`&lt;hyper_util::..</text></g><g><title>polyfight`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (13 samples, 0.01%)</title><rect x="65.8290%" y="85" width="0.0134%" height="15" fill="rgb(245,82,37)" fg:x="63866" fg:w="13"/><text x="66.0790%" y="95.50"></text></g><g><title>polyfight`&lt;hyper::common::io::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (14,670 samples, 15.12%)</title><rect x="50.7298%" y="117" width="15.1209%" height="15" fill="rgb(227,149,46)" fg:x="49217" fg:w="14670"/><text x="50.9798%" y="127.50">polyfight`&lt;hyper::commo..</text></g><g><title>polyfight`tungstenite::buffer::ReadBuffer&lt;_&gt;::read_from (14,752 samples, 15.21%)</title><rect x="50.6566%" y="149" width="15.2054%" height="15" fill="rgb(218,36,50)" fg:x="49146" fg:w="14752"/><text x="50.9066%" y="159.50">polyfight`tungstenite::..</text></g><g><title>polyfight`&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Read&gt;::read (14,703 samples, 15.15%)</title><rect x="50.7071%" y="133" width="15.1549%" height="15" fill="rgb(226,80,48)" fg:x="49195" fg:w="14703"/><text x="50.9571%" y="143.50">polyfight`&lt;tokio_tungst..</text></g><g><title>polyfight`&lt;hyper_util::common::rewind::Rewind&lt;T&gt; as hyper::rt::io::Read&gt;::poll_read (11 samples, 0.01%)</title><rect x="65.8507%" y="117" width="0.0113%" height="15" fill="rgb(238,224,15)" fg:x="63887" fg:w="11"/><text x="66.1007%" y="127.50"></text></g><g><title>polyfight`tungstenite::protocol::frame::FrameCodec::read_frame (15,384 samples, 15.86%)</title><rect x="50.1608%" y="165" width="15.8569%" height="15" fill="rgb(241,136,10)" fg:x="48665" fg:w="15384"/><text x="50.4108%" y="175.50">polyfight`tungstenite::p..</text></g><g><title>polyfight`tungstenite::protocol::frame::frame::FrameHeader::parse (151 samples, 0.16%)</title><rect x="65.8620%" y="149" width="0.1556%" height="15" fill="rgb(208,32,45)" fg:x="63898" fg:w="151"/><text x="66.1120%" y="159.50"></text></g><g><title>polyfight`tungstenite::protocol::frame::frame::FrameHeader::parse (48 samples, 0.05%)</title><rect x="66.0176%" y="165" width="0.0495%" height="15" fill="rgb(207,135,9)" fg:x="64049" fg:w="48"/><text x="66.2676%" y="175.50"></text></g><g><title>polyfight`tungstenite::protocol::message::IncompleteMessage::complete (11 samples, 0.01%)</title><rect x="66.0671%" y="165" width="0.0113%" height="15" fill="rgb(206,86,44)" fg:x="64097" fg:w="11"/><text x="66.3171%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.02%)</title><rect x="66.1485%" y="133" width="0.0175%" height="15" fill="rgb(245,177,15)" fg:x="64176" fg:w="17"/><text x="66.3985%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (35 samples, 0.04%)</title><rect x="66.1671%" y="133" width="0.0361%" height="15" fill="rgb(206,64,50)" fg:x="64194" fg:w="35"/><text x="66.4171%" y="143.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (118 samples, 0.12%)</title><rect x="66.1331%" y="149" width="0.1216%" height="15" fill="rgb(234,36,40)" fg:x="64161" fg:w="118"/><text x="66.3831%" y="159.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (46 samples, 0.05%)</title><rect x="66.2073%" y="133" width="0.0474%" height="15" fill="rgb(213,64,8)" fg:x="64233" fg:w="46"/><text x="66.4573%" y="143.50"></text></g><g><title>polyfight`tungstenite::protocol::message::IncompleteMessage::extend (184 samples, 0.19%)</title><rect x="66.0785%" y="165" width="0.1897%" height="15" fill="rgb(210,75,36)" fg:x="64108" fg:w="184"/><text x="66.3285%" y="175.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (13 samples, 0.01%)</title><rect x="66.2547%" y="149" width="0.0134%" height="15" fill="rgb(229,88,21)" fg:x="64279" fg:w="13"/><text x="66.5047%" y="159.50"></text></g><g><title>polyfight`tungstenite::protocol::WebSocketContext::read (16,057 samples, 16.55%)</title><rect x="49.7248%" y="181" width="16.5505%" height="15" fill="rgb(252,204,47)" fg:x="48242" fg:w="16057"/><text x="49.9748%" y="191.50">polyfight`tungstenite::pro..</text></g><g><title>polyfight`tungstenite::protocol::frame::FrameCodec::read_frame (15 samples, 0.02%)</title><rect x="66.2753%" y="181" width="0.0155%" height="15" fill="rgb(208,77,27)" fg:x="64299" fg:w="15"/><text x="66.5253%" y="191.50"></text></g><g><title>polyfight`&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (16,321 samples, 16.82%)</title><rect x="49.4805%" y="197" width="16.8227%" height="15" fill="rgb(221,76,26)" fg:x="48005" fg:w="16321"/><text x="49.7305%" y="207.50">polyfight`&lt;tokio_tungsteni..</text></g><g><title>polyfight`futures_core::task::__internal::atomic_waker::AtomicWaker::register (19 samples, 0.02%)</title><rect x="66.3083%" y="197" width="0.0196%" height="15" fill="rgb(225,139,18)" fg:x="64331" fg:w="19"/><text x="66.5583%" y="207.50"></text></g><g><title>polyfight`&lt;axum::extract::ws::WebSocket as futures_core::stream::Stream&gt;::poll_next (16,405 samples, 16.91%)</title><rect x="49.4475%" y="213" width="16.9092%" height="15" fill="rgb(230,137,11)" fg:x="47973" fg:w="16405"/><text x="49.6975%" y="223.50">polyfight`&lt;axum::extract::..</text></g><g><title>polyfight`tungstenite::protocol::WebSocketContext::read (23 samples, 0.02%)</title><rect x="66.3331%" y="197" width="0.0237%" height="15" fill="rgb(212,28,1)" fg:x="64355" fg:w="23"/><text x="66.5831%" y="207.50"></text></g><g><title>polyfight`&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_core::stream::Stream&gt;::poll_next (14 samples, 0.01%)</title><rect x="66.3568%" y="213" width="0.0144%" height="15" fill="rgb(248,164,17)" fg:x="64378" fg:w="14"/><text x="66.6068%" y="223.50"></text></g><g><title>polyfight`futures_util::stream::stream::StreamExt::poll_next_unpin (16,533 samples, 17.04%)</title><rect x="49.4156%" y="229" width="17.0412%" height="15" fill="rgb(222,171,42)" fg:x="47942" fg:w="16533"/><text x="49.6656%" y="239.50">polyfight`futures_util::st..</text></g><g><title>polyfight`futures_util::lock::bilock::BiLock&lt;T&gt;::poll_lock (83 samples, 0.09%)</title><rect x="66.3712%" y="213" width="0.0856%" height="15" fill="rgb(243,84,45)" fg:x="64392" fg:w="83"/><text x="66.6212%" y="223.50"></text></g><g><title>polyfight`&lt;bytes::bytes_mut::BytesMut as core::ops::drop::Drop&gt;::drop (10 samples, 0.01%)</title><rect x="66.5114%" y="213" width="0.0103%" height="15" fill="rgb(252,49,23)" fg:x="64528" fg:w="10"/><text x="66.7614%" y="223.50"></text></g><g><title>polyfight`bytes::bytes_mut::BytesMut::set_start (13 samples, 0.01%)</title><rect x="66.5217%" y="213" width="0.0134%" height="15" fill="rgb(215,19,7)" fg:x="64538" fg:w="13"/><text x="66.7717%" y="223.50"></text></g><g><title>polyfight`polyfight::connection::packets::parse_input_packet (160 samples, 0.16%)</title><rect x="66.4567%" y="229" width="0.1649%" height="15" fill="rgb(238,81,41)" fg:x="64475" fg:w="160"/><text x="66.7067%" y="239.50"></text></g><g><title>polyfight`bytes::bytes_mut::BytesMut::split_to (84 samples, 0.09%)</title><rect x="66.5351%" y="213" width="0.0866%" height="15" fill="rgb(210,199,37)" fg:x="64551" fg:w="84"/><text x="66.7851%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvsignal (131 samples, 0.14%)</title><rect x="66.7773%" y="149" width="0.1350%" height="15" fill="rgb(244,192,49)" fg:x="64786" fg:w="131"/><text x="67.0273%" y="159.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (12 samples, 0.01%)</title><rect x="66.9164%" y="133" width="0.0124%" height="15" fill="rgb(226,211,11)" fg:x="64921" fg:w="12"/><text x="67.1664%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (12 samples, 0.01%)</title><rect x="66.9164%" y="117" width="0.0124%" height="15" fill="rgb(236,162,54)" fg:x="64921" fg:w="12"/><text x="67.1664%" y="127.50"></text></g><g><title>polyfight`parking_lot::condvar::Condvar::notify_one_slow (151 samples, 0.16%)</title><rect x="66.7742%" y="165" width="0.1556%" height="15" fill="rgb(220,229,9)" fg:x="64783" fg:w="151"/><text x="67.0242%" y="175.50"></text></g><g><title>polyfight`std::sys::pal::unix::time::Timespec::now (13 samples, 0.01%)</title><rect x="66.9164%" y="149" width="0.0134%" height="15" fill="rgb(250,87,22)" fg:x="64921" fg:w="13"/><text x="67.1664%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`kevent (120 samples, 0.12%)</title><rect x="66.9309%" y="149" width="0.1237%" height="15" fill="rgb(239,43,17)" fg:x="64935" fg:w="120"/><text x="67.1809%" y="159.50"></text></g><g><title>polyfight`tokio::runtime::driver::Handle::unpark (122 samples, 0.13%)</title><rect x="66.9298%" y="165" width="0.1257%" height="15" fill="rgb(231,177,25)" fg:x="64934" fg:w="122"/><text x="67.1798%" y="175.50"></text></g><g><title>polyfight`tokio::runtime::context::with_scheduler (312 samples, 0.32%)</title><rect x="66.7670%" y="181" width="0.3216%" height="15" fill="rgb(219,179,1)" fg:x="64776" fg:w="312"/><text x="67.0170%" y="191.50"></text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_local (28 samples, 0.03%)</title><rect x="67.0597%" y="165" width="0.0289%" height="15" fill="rgb(238,219,53)" fg:x="65060" fg:w="28"/><text x="67.3097%" y="175.50"></text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (321 samples, 0.33%)</title><rect x="66.7618%" y="197" width="0.3309%" height="15" fill="rgb(232,167,36)" fg:x="64771" fg:w="321"/><text x="67.0118%" y="207.50"></text></g><g><title>polyfight`polyfight::connection::wss::incoming_connection::_{{closure}} (18,727 samples, 19.30%)</title><rect x="47.7963%" y="245" width="19.3026%" height="15" fill="rgb(244,19,51)" fg:x="46371" fg:w="18727"/><text x="48.0463%" y="255.50">polyfight`polyfight::connectio..</text></g><g><title>polyfight`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (460 samples, 0.47%)</title><rect x="66.6248%" y="229" width="0.4741%" height="15" fill="rgb(224,6,22)" fg:x="64638" fg:w="460"/><text x="66.8748%" y="239.50"></text></g><g><title>polyfight`tokio::runtime::task::waker::wake_by_val (327 samples, 0.34%)</title><rect x="66.7618%" y="213" width="0.3371%" height="15" fill="rgb(224,145,5)" fg:x="64771" fg:w="327"/><text x="67.0118%" y="223.50"></text></g><g><title>polyfight`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (10 samples, 0.01%)</title><rect x="67.0989%" y="245" width="0.0103%" height="15" fill="rgb(234,130,49)" fg:x="65098" fg:w="10"/><text x="67.3489%" y="255.50"></text></g><g><title>polyfight`axum::extract::ws::WebSocketUpgrade&lt;F&gt;::on_upgrade::_{{closure}} (19,308 samples, 19.90%)</title><rect x="47.2325%" y="261" width="19.9015%" height="15" fill="rgb(254,6,2)" fg:x="45824" fg:w="19308"/><text x="47.4825%" y="271.50">polyfight`axum::extract::ws::We..</text></g><g><title>polyfight`tokio::sync::batch_semaphore::Semaphore::release (24 samples, 0.02%)</title><rect x="67.1092%" y="245" width="0.0247%" height="15" fill="rgb(208,96,46)" fg:x="65108" fg:w="24"/><text x="67.3592%" y="255.50"></text></g><g><title>polyfight`polyfight::connection::wss::incoming_connection::_{{closure}} (15 samples, 0.02%)</title><rect x="67.1350%" y="261" width="0.0155%" height="15" fill="rgb(239,3,39)" fg:x="65133" fg:w="15"/><text x="67.3850%" y="271.50"></text></g><g><title>polyfight`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (19,408 samples, 20.00%)</title><rect x="47.1644%" y="277" width="20.0045%" height="15" fill="rgb(233,210,1)" fg:x="45758" fg:w="19408"/><text x="47.4144%" y="287.50">polyfight`tokio::runtime::task:..</text></g><g><title>polyfight`tokio::runtime::task::core::TaskIdGuard::enter (17 samples, 0.02%)</title><rect x="67.1515%" y="261" width="0.0175%" height="15" fill="rgb(244,137,37)" fg:x="65149" fg:w="17"/><text x="67.4015%" y="271.50"></text></g><g><title>polyfight`tokio::runtime::task::core::TaskIdGuard::enter (10 samples, 0.01%)</title><rect x="67.1690%" y="277" width="0.0103%" height="15" fill="rgb(240,136,2)" fg:x="65166" fg:w="10"/><text x="67.4190%" y="287.50"></text></g><g><title>polyfight`tokio::runtime::task::state::State::transition_to_idle (13 samples, 0.01%)</title><rect x="67.1793%" y="277" width="0.0134%" height="15" fill="rgb(239,18,37)" fg:x="65176" fg:w="13"/><text x="67.4293%" y="287.50"></text></g><g><title>polyfight`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (19,483 samples, 20.08%)</title><rect x="47.1242%" y="293" width="20.0818%" height="15" fill="rgb(218,185,22)" fg:x="45719" fg:w="19483"/><text x="47.3742%" y="303.50">polyfight`tokio::runtime::task::..</text></g><g><title>polyfight`tokio::runtime::task::state::State::transition_to_running (13 samples, 0.01%)</title><rect x="67.1927%" y="277" width="0.0134%" height="15" fill="rgb(225,218,4)" fg:x="65189" fg:w="13"/><text x="67.4427%" y="287.50"></text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (19,876 samples, 20.49%)</title><rect x="46.7243%" y="309" width="20.4869%" height="15" fill="rgb(230,182,32)" fg:x="45331" fg:w="19876"/><text x="46.9743%" y="319.50">polyfight`tokio::runtime::schedu..</text></g><g><title>polyfight`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (12 samples, 0.01%)</title><rect x="67.2112%" y="309" width="0.0124%" height="15" fill="rgb(242,56,43)" fg:x="65207" fg:w="12"/><text x="67.4612%" y="319.50"></text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::worker::Context::run (35,834 samples, 36.94%)</title><rect x="30.2903%" y="325" width="36.9354%" height="15" fill="rgb(233,99,24)" fg:x="29387" fg:w="35834"/><text x="30.5403%" y="335.50">polyfight`tokio::runtime::scheduler::multi_thread::worker::C..</text></g><g><title>polyfight`core::ops::function::FnOnce::call_once{{vtable.shim}} (35,893 samples, 37.00%)</title><rect x="30.2387%" y="453" width="36.9962%" height="15" fill="rgb(234,209,42)" fg:x="29337" fg:w="35893"/><text x="30.4887%" y="463.50">polyfight`core::ops::function::FnOnce::call_once{{vtable.shi..</text></g><g><title>polyfight`std::sys_common::backtrace::__rust_begin_short_backtrace (35,893 samples, 37.00%)</title><rect x="30.2387%" y="437" width="36.9962%" height="15" fill="rgb(227,7,12)" fg:x="29337" fg:w="35893"/><text x="30.4887%" y="447.50">polyfight`std::sys_common::backtrace::__rust_begin_short_bac..</text></g><g><title>polyfight`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (35,892 samples, 37.00%)</title><rect x="30.2397%" y="421" width="36.9952%" height="15" fill="rgb(245,203,43)" fg:x="29338" fg:w="35892"/><text x="30.4897%" y="431.50">polyfight`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>polyfight`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (35,892 samples, 37.00%)</title><rect x="30.2397%" y="405" width="36.9952%" height="15" fill="rgb(238,205,33)" fg:x="29338" fg:w="35892"/><text x="30.4897%" y="415.50">polyfight`tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>polyfight`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (35,892 samples, 37.00%)</title><rect x="30.2397%" y="389" width="36.9952%" height="15" fill="rgb(231,56,7)" fg:x="29338" fg:w="35892"/><text x="30.4897%" y="399.50">polyfight`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; a..</text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::worker::run (35,892 samples, 37.00%)</title><rect x="30.2397%" y="373" width="36.9952%" height="15" fill="rgb(244,186,29)" fg:x="29338" fg:w="35892"/><text x="30.4897%" y="383.50">polyfight`tokio::runtime::scheduler::multi_thread::worker::r..</text></g><g><title>polyfight`tokio::runtime::context::runtime::enter_runtime (35,892 samples, 37.00%)</title><rect x="30.2397%" y="357" width="36.9952%" height="15" fill="rgb(234,111,31)" fg:x="29338" fg:w="35892"/><text x="30.4897%" y="367.50">polyfight`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>polyfight`tokio::runtime::context::set_scheduler (35,892 samples, 37.00%)</title><rect x="30.2397%" y="341" width="36.9952%" height="15" fill="rgb(241,149,10)" fg:x="29338" fg:w="35892"/><text x="30.4897%" y="351.50">polyfight`tokio::runtime::context::set_scheduler</text></g><g><title>libsystem_pthread.dylib`thread_start (35,894 samples, 37.00%)</title><rect x="30.2387%" y="501" width="36.9973%" height="15" fill="rgb(249,206,44)" fg:x="29337" fg:w="35894"/><text x="30.4887%" y="511.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (35,894 samples, 37.00%)</title><rect x="30.2387%" y="485" width="36.9973%" height="15" fill="rgb(251,153,30)" fg:x="29337" fg:w="35894"/><text x="30.4887%" y="495.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>polyfight`std::sys::pal::unix::thread::Thread::new::thread_start (35,894 samples, 37.00%)</title><rect x="30.2387%" y="469" width="36.9973%" height="15" fill="rgb(239,152,38)" fg:x="29337" fg:w="35894"/><text x="30.4887%" y="479.50">polyfight`std::sys::pal::unix::thread::Thread::new::thread_s..</text></g><g><title>libsystem_m.dylib`atan2f (19 samples, 0.02%)</title><rect x="67.2597%" y="469" width="0.0196%" height="15" fill="rgb(249,139,47)" fg:x="65254" fg:w="19"/><text x="67.5097%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (10 samples, 0.01%)</title><rect x="67.2885%" y="469" width="0.0103%" height="15" fill="rgb(244,64,35)" fg:x="65282" fg:w="10"/><text x="67.5385%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.03%)</title><rect x="67.2989%" y="469" width="0.0340%" height="15" fill="rgb(216,46,15)" fg:x="65292" fg:w="33"/><text x="67.5489%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (28 samples, 0.03%)</title><rect x="67.3329%" y="469" width="0.0289%" height="15" fill="rgb(250,74,19)" fg:x="65325" fg:w="28"/><text x="67.5829%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12,920 samples, 13.32%)</title><rect x="67.3669%" y="469" width="13.3171%" height="15" fill="rgb(249,42,33)" fg:x="65358" fg:w="12920"/><text x="67.6169%" y="479.50">libsystem_platform.d..</text></g><g><title>polyfight`DYLD-STUB$$free (13 samples, 0.01%)</title><rect x="80.6974%" y="469" width="0.0134%" height="15" fill="rgb(242,149,17)" fg:x="78291" fg:w="13"/><text x="80.9474%" y="479.50"></text></g><g><title>polyfight`DYLD-STUB$$memcpy (377 samples, 0.39%)</title><rect x="80.7108%" y="469" width="0.3886%" height="15" fill="rgb(244,29,21)" fg:x="78304" fg:w="377"/><text x="80.9608%" y="479.50"></text></g><g><title>libsystem_m.dylib`__sincosf_stret (40 samples, 0.04%)</title><rect x="87.7466%" y="453" width="0.0412%" height="15" fill="rgb(220,130,37)" fg:x="85130" fg:w="40"/><text x="87.9966%" y="463.50"></text></g><g><title>libsystem_m.dylib`atan2f (13 samples, 0.01%)</title><rect x="87.7878%" y="453" width="0.0134%" height="15" fill="rgb(211,67,2)" fg:x="85170" fg:w="13"/><text x="88.0378%" y="463.50"></text></g><g><title>libsystem_m.dylib`powf (12 samples, 0.01%)</title><rect x="87.8012%" y="453" width="0.0124%" height="15" fill="rgb(235,68,52)" fg:x="85183" fg:w="12"/><text x="88.0512%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.01%)</title><rect x="87.8167%" y="453" width="0.0103%" height="15" fill="rgb(246,142,3)" fg:x="85198" fg:w="10"/><text x="88.0667%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (81 samples, 0.08%)</title><rect x="87.8270%" y="453" width="0.0835%" height="15" fill="rgb(241,25,7)" fg:x="85208" fg:w="81"/><text x="88.0770%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.02%)</title><rect x="87.9177%" y="453" width="0.0155%" height="15" fill="rgb(242,119,39)" fg:x="85296" fg:w="15"/><text x="88.1677%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.01%)</title><rect x="87.9198%" y="437" width="0.0134%" height="15" fill="rgb(241,98,45)" fg:x="85298" fg:w="13"/><text x="88.1698%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (13 samples, 0.01%)</title><rect x="87.9414%" y="453" width="0.0134%" height="15" fill="rgb(254,28,30)" fg:x="85319" fg:w="13"/><text x="88.1914%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (12 samples, 0.01%)</title><rect x="87.9424%" y="437" width="0.0124%" height="15" fill="rgb(241,142,54)" fg:x="85320" fg:w="12"/><text x="88.1924%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (240 samples, 0.25%)</title><rect x="87.9600%" y="453" width="0.2474%" height="15" fill="rgb(222,85,15)" fg:x="85337" fg:w="240"/><text x="88.2100%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (11 samples, 0.01%)</title><rect x="88.2073%" y="453" width="0.0113%" height="15" fill="rgb(210,85,47)" fg:x="85577" fg:w="11"/><text x="88.4573%" y="463.50"></text></g><g><title>polyfight`futures_core::task::__internal::atomic_waker::AtomicWaker::register (24 samples, 0.02%)</title><rect x="88.2424%" y="405" width="0.0247%" height="15" fill="rgb(224,206,25)" fg:x="85611" fg:w="24"/><text x="88.4924%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`__sendto (3,151 samples, 3.25%)</title><rect x="88.3053%" y="341" width="3.2479%" height="15" fill="rgb(243,201,19)" fg:x="85672" fg:w="3151"/><text x="88.5553%" y="351.50">lib..</text></g><g><title>polyfight`&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (23 samples, 0.02%)</title><rect x="91.5531%" y="341" width="0.0237%" height="15" fill="rgb(236,59,4)" fg:x="88823" fg:w="23"/><text x="91.8031%" y="351.50"></text></g><g><title>polyfight`&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (3,181 samples, 3.28%)</title><rect x="88.3001%" y="357" width="3.2788%" height="15" fill="rgb(254,179,45)" fg:x="85667" fg:w="3181"/><text x="88.5501%" y="367.50">pol..</text></g><g><title>polyfight`futures_task::waker::wake_by_ref_arc_raw (18 samples, 0.02%)</title><rect x="91.5882%" y="341" width="0.0186%" height="15" fill="rgb(226,14,10)" fg:x="88857" fg:w="18"/><text x="91.8382%" y="351.50"></text></g><g><title>polyfight`&lt;tokio_tungstenite::compat::WakerProxy as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (18 samples, 0.02%)</title><rect x="91.5882%" y="325" width="0.0186%" height="15" fill="rgb(244,27,41)" fg:x="88857" fg:w="18"/><text x="91.8382%" y="335.50"></text></g><g><title>polyfight`tokio::runtime::task::waker::wake_by_val (18 samples, 0.02%)</title><rect x="91.5882%" y="309" width="0.0186%" height="15" fill="rgb(235,35,32)" fg:x="88857" fg:w="18"/><text x="91.8382%" y="319.50"></text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (18 samples, 0.02%)</title><rect x="91.5882%" y="293" width="0.0186%" height="15" fill="rgb(218,68,31)" fg:x="88857" fg:w="18"/><text x="91.8382%" y="303.50"></text></g><g><title>polyfight`tokio::runtime::context::with_scheduler (18 samples, 0.02%)</title><rect x="91.5882%" y="277" width="0.0186%" height="15" fill="rgb(207,120,37)" fg:x="88857" fg:w="18"/><text x="91.8382%" y="287.50"></text></g><g><title>polyfight`tokio::runtime::driver::Handle::unpark (14 samples, 0.01%)</title><rect x="91.5923%" y="261" width="0.0144%" height="15" fill="rgb(227,98,0)" fg:x="88861" fg:w="14"/><text x="91.8423%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`kevent (14 samples, 0.01%)</title><rect x="91.5923%" y="245" width="0.0144%" height="15" fill="rgb(207,7,3)" fg:x="88861" fg:w="14"/><text x="91.8423%" y="255.50"></text></g><g><title>polyfight`tokio::runtime::io::registration::Registration::poll_ready (32 samples, 0.03%)</title><rect x="91.5809%" y="357" width="0.0330%" height="15" fill="rgb(206,98,19)" fg:x="88850" fg:w="32"/><text x="91.8309%" y="367.50"></text></g><g><title>polyfight`tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (3,227 samples, 3.33%)</title><rect x="88.2888%" y="373" width="3.3262%" height="15" fill="rgb(217,5,26)" fg:x="85656" fg:w="3227"/><text x="88.5388%" y="383.50">pol..</text></g><g><title>polyfight`&lt;tokio_tungstenite::compat::AllowStd&lt;S&gt; as std::io::Write&gt;::write (3,232 samples, 3.33%)</title><rect x="88.2846%" y="389" width="3.3313%" height="15" fill="rgb(235,190,38)" fg:x="85652" fg:w="3232"/><text x="88.5346%" y="399.50">pol..</text></g><g><title>polyfight`&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::poll_flush (3,284 samples, 3.38%)</title><rect x="88.2331%" y="421" width="3.3849%" height="15" fill="rgb(247,86,24)" fg:x="85602" fg:w="3284"/><text x="88.4831%" y="431.50">pol..</text></g><g><title>polyfight`tungstenite::protocol::WebSocketContext::flush (3,247 samples, 3.35%)</title><rect x="88.2712%" y="405" width="3.3468%" height="15" fill="rgb(205,101,16)" fg:x="85639" fg:w="3247"/><text x="88.5212%" y="415.50">pol..</text></g><g><title>polyfight`&lt;axum::extract::ws::WebSocket as futures_sink::Sink&lt;axum::extract::ws::Message&gt;&gt;::poll_flush (3,293 samples, 3.39%)</title><rect x="88.2300%" y="437" width="3.3942%" height="15" fill="rgb(246,168,33)" fg:x="85599" fg:w="3293"/><text x="88.4800%" y="447.50">pol..</text></g><g><title>libsystem_malloc.dylib`free_small (30 samples, 0.03%)</title><rect x="91.7129%" y="341" width="0.0309%" height="15" fill="rgb(231,114,1)" fg:x="88978" fg:w="30"/><text x="91.9629%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (28 samples, 0.03%)</title><rect x="91.7438%" y="341" width="0.0289%" height="15" fill="rgb(207,184,53)" fg:x="89008" fg:w="28"/><text x="91.9938%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.02%)</title><rect x="91.7510%" y="325" width="0.0216%" height="15" fill="rgb(224,95,51)" fg:x="89015" fg:w="21"/><text x="92.0010%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (96 samples, 0.10%)</title><rect x="91.7737%" y="341" width="0.0990%" height="15" fill="rgb(212,188,45)" fg:x="89037" fg:w="96"/><text x="92.0237%" y="351.50"></text></g><g><title>polyfight`tungstenite::protocol::frame::FrameCodec::buffer_frame (197 samples, 0.20%)</title><rect x="91.6923%" y="357" width="0.2031%" height="15" fill="rgb(223,154,38)" fg:x="88958" fg:w="197"/><text x="91.9423%" y="367.50"></text></g><g><title>polyfight`tungstenite::protocol::WebSocketContext::_write (242 samples, 0.25%)</title><rect x="91.6469%" y="389" width="0.2494%" height="15" fill="rgb(251,22,52)" fg:x="88914" fg:w="242"/><text x="91.8969%" y="399.50"></text></g><g><title>polyfight`tungstenite::protocol::WebSocketContext::buffer_frame (238 samples, 0.25%)</title><rect x="91.6510%" y="373" width="0.2453%" height="15" fill="rgb(229,209,22)" fg:x="88918" fg:w="238"/><text x="91.9010%" y="383.50"></text></g><g><title>polyfight`&lt;tokio_tungstenite::WebSocketStream&lt;T&gt; as futures_sink::Sink&lt;tungstenite::protocol::message::Message&gt;&gt;::start_send (262 samples, 0.27%)</title><rect x="91.6304%" y="421" width="0.2701%" height="15" fill="rgb(234,138,34)" fg:x="88898" fg:w="262"/><text x="91.8804%" y="431.50"></text></g><g><title>polyfight`tungstenite::protocol::WebSocketContext::write (257 samples, 0.26%)</title><rect x="91.6356%" y="405" width="0.2649%" height="15" fill="rgb(212,95,11)" fg:x="88903" fg:w="257"/><text x="91.8856%" y="415.50"></text></g><g><title>polyfight`&lt;axum::extract::ws::WebSocket as futures_sink::Sink&lt;axum::extract::ws::Message&gt;&gt;::start_send (268 samples, 0.28%)</title><rect x="91.6263%" y="437" width="0.2762%" height="15" fill="rgb(240,179,47)" fg:x="88894" fg:w="268"/><text x="91.8763%" y="447.50"></text></g><g><title>polyfight`&lt;futures_util::stream::stream::split::SplitSink&lt;S,Item&gt; as futures_sink::Sink&lt;Item&gt;&gt;::poll_flush (3,579 samples, 3.69%)</title><rect x="88.2259%" y="453" width="3.6890%" height="15" fill="rgb(240,163,11)" fg:x="85595" fg:w="3579"/><text x="88.4759%" y="463.50">poly..</text></g><g><title>polyfight`&lt;polyfight::game::entity::base_entity::GenericEntity as polyfight::game::entity::base_entity::GenericEntityHelpers&gt;::take_census (23 samples, 0.02%)</title><rect x="91.9149%" y="453" width="0.0237%" height="15" fill="rgb(236,37,12)" fg:x="89174" fg:w="23"/><text x="92.1649%" y="463.50"></text></g><g><title>polyfight`&lt;polyfight::game::entity::projectile_entity::ProjectileEntity as polyfight::game::entity::base_entity::GenericEntityHelpers&gt;::take_census (84 samples, 0.09%)</title><rect x="91.9427%" y="453" width="0.0866%" height="15" fill="rgb(232,164,16)" fg:x="89201" fg:w="84"/><text x="92.1927%" y="463.50"></text></g><g><title>polyfight`&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (10 samples, 0.01%)</title><rect x="92.0355%" y="453" width="0.0103%" height="15" fill="rgb(244,205,15)" fg:x="89291" fg:w="10"/><text x="92.2855%" y="463.50"></text></g><g><title>polyfight`&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="92.0592%" y="437" width="0.0206%" height="15" fill="rgb(223,117,47)" fg:x="89314" fg:w="20"/><text x="92.3092%" y="447.50"></text></g><g><title>polyfight`&lt;tokio::sync::mutex::Mutex&lt;T&gt; as polyfight::utils::timed_mutex::AsyncTimedLock&lt;T&gt;&gt;::lock_with_timeout::_{{closure}} (33 samples, 0.03%)</title><rect x="92.0479%" y="453" width="0.0340%" height="15" fill="rgb(244,107,35)" fg:x="89303" fg:w="33"/><text x="92.2979%" y="463.50"></text></g><g><title>polyfight`DYLD-STUB$$clock_gettime (12 samples, 0.01%)</title><rect x="92.0829%" y="453" width="0.0124%" height="15" fill="rgb(205,140,8)" fg:x="89337" fg:w="12"/><text x="92.3329%" y="463.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (20 samples, 0.02%)</title><rect x="92.1087%" y="453" width="0.0206%" height="15" fill="rgb(228,84,46)" fg:x="89362" fg:w="20"/><text x="92.3587%" y="463.50"></text></g><g><title>polyfight`alloc::vec::in_place_collect::from_iter_in_place (618 samples, 0.64%)</title><rect x="92.1293%" y="453" width="0.6370%" height="15" fill="rgb(254,188,9)" fg:x="89382" fg:w="618"/><text x="92.3793%" y="463.50"></text></g><g><title>polyfight`bytes::bytes::_&lt;impl core::convert::From&lt;bytes::bytes::Bytes&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from (23 samples, 0.02%)</title><rect x="92.7663%" y="453" width="0.0237%" height="15" fill="rgb(206,112,54)" fg:x="90000" fg:w="23"/><text x="93.0163%" y="463.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.03%)</title><rect x="92.7993%" y="437" width="0.0330%" height="15" fill="rgb(216,84,49)" fg:x="90032" fg:w="32"/><text x="93.0493%" y="447.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (30 samples, 0.03%)</title><rect x="92.8013%" y="421" width="0.0309%" height="15" fill="rgb(214,194,35)" fg:x="90034" fg:w="30"/><text x="93.0513%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`realloc (24 samples, 0.02%)</title><rect x="92.8075%" y="405" width="0.0247%" height="15" fill="rgb(249,28,3)" fg:x="90040" fg:w="24"/><text x="93.0575%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (20 samples, 0.02%)</title><rect x="92.8116%" y="389" width="0.0206%" height="15" fill="rgb(222,56,52)" fg:x="90044" fg:w="20"/><text x="93.0616%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (18 samples, 0.02%)</title><rect x="92.8137%" y="373" width="0.0186%" height="15" fill="rgb(245,217,50)" fg:x="90046" fg:w="18"/><text x="93.0637%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (16 samples, 0.02%)</title><rect x="92.8158%" y="357" width="0.0165%" height="15" fill="rgb(213,201,24)" fg:x="90048" fg:w="16"/><text x="93.0658%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (16 samples, 0.02%)</title><rect x="92.8158%" y="341" width="0.0165%" height="15" fill="rgb(248,116,28)" fg:x="90048" fg:w="16"/><text x="93.0658%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.01%)</title><rect x="92.8220%" y="325" width="0.0103%" height="15" fill="rgb(219,72,43)" fg:x="90054" fg:w="10"/><text x="93.0720%" y="335.50"></text></g><g><title>polyfight`bytes::bytes_mut::BytesMut::reserve_inner (33 samples, 0.03%)</title><rect x="92.7993%" y="453" width="0.0340%" height="15" fill="rgb(209,138,14)" fg:x="90032" fg:w="33"/><text x="93.0493%" y="463.50"></text></g><g><title>polyfight`core::ptr::drop_in_place&lt;polyfight::game::entity::projectile_entity::ProjectileEntity::tick::{{closure}}&gt; (13 samples, 0.01%)</title><rect x="92.8333%" y="453" width="0.0134%" height="15" fill="rgb(222,18,33)" fg:x="90065" fg:w="13"/><text x="93.0833%" y="463.50"></text></g><g><title>polyfight`&lt;polyfight::game::entity::base_entity::GenericEntity as polyfight::game::entity::base_entity::GenericEntityHelpers&gt;::take_census (72 samples, 0.07%)</title><rect x="93.0879%" y="437" width="0.0742%" height="15" fill="rgb(213,199,7)" fg:x="90312" fg:w="72"/><text x="93.3379%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (25 samples, 0.03%)</title><rect x="95.5524%" y="325" width="0.0258%" height="15" fill="rgb(250,110,10)" fg:x="92703" fg:w="25"/><text x="95.8024%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (24 samples, 0.02%)</title><rect x="95.5534%" y="309" width="0.0247%" height="15" fill="rgb(248,123,6)" fg:x="92704" fg:w="24"/><text x="95.8034%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.02%)</title><rect x="95.5616%" y="293" width="0.0165%" height="15" fill="rgb(206,91,31)" fg:x="92712" fg:w="16"/><text x="95.8116%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (33 samples, 0.03%)</title><rect x="95.5452%" y="341" width="0.0340%" height="15" fill="rgb(211,154,13)" fg:x="92696" fg:w="33"/><text x="95.7952%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_small (11 samples, 0.01%)</title><rect x="95.5946%" y="325" width="0.0113%" height="15" fill="rgb(225,148,7)" fg:x="92744" fg:w="11"/><text x="95.8446%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (18 samples, 0.02%)</title><rect x="95.6245%" y="325" width="0.0186%" height="15" fill="rgb(220,160,43)" fg:x="92773" fg:w="18"/><text x="95.8745%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (17 samples, 0.02%)</title><rect x="95.6256%" y="309" width="0.0175%" height="15" fill="rgb(213,52,39)" fg:x="92774" fg:w="17"/><text x="95.8756%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (14 samples, 0.01%)</title><rect x="95.6286%" y="293" width="0.0144%" height="15" fill="rgb(243,137,7)" fg:x="92777" fg:w="14"/><text x="95.8786%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (62 samples, 0.06%)</title><rect x="95.5843%" y="341" width="0.0639%" height="15" fill="rgb(230,79,13)" fg:x="92734" fg:w="62"/><text x="95.8343%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (157 samples, 0.16%)</title><rect x="95.5348%" y="357" width="0.1618%" height="15" fill="rgb(247,105,23)" fg:x="92686" fg:w="157"/><text x="95.7848%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (45 samples, 0.05%)</title><rect x="95.6503%" y="341" width="0.0464%" height="15" fill="rgb(223,179,41)" fg:x="92798" fg:w="45"/><text x="95.9003%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (175 samples, 0.18%)</title><rect x="95.5328%" y="373" width="0.1804%" height="15" fill="rgb(218,9,34)" fg:x="92684" fg:w="175"/><text x="95.7828%" y="383.50"></text></g><g><title>polyfight`&lt;polyfight::game::entity::projectile_entity::ProjectileEntity as polyfight::game::entity::base_entity::GenericEntityHelpers&gt;::take_census (2,477 samples, 2.55%)</title><rect x="93.1621%" y="437" width="2.5531%" height="15" fill="rgb(222,106,8)" fg:x="90384" fg:w="2477"/><text x="93.4121%" y="447.50">po..</text></g><g><title>polyfight`bytes::bytes_mut::BytesMut::reserve_inner (209 samples, 0.22%)</title><rect x="95.4998%" y="421" width="0.2154%" height="15" fill="rgb(211,220,0)" fg:x="92652" fg:w="209"/><text x="95.7498%" y="431.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (200 samples, 0.21%)</title><rect x="95.5091%" y="405" width="0.2061%" height="15" fill="rgb(229,52,16)" fg:x="92661" fg:w="200"/><text x="95.7591%" y="415.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (191 samples, 0.20%)</title><rect x="95.5184%" y="389" width="0.1969%" height="15" fill="rgb(212,155,18)" fg:x="92670" fg:w="191"/><text x="95.7684%" y="399.50"></text></g><g><title>polyfight`&lt;polyfight::game::entity::tank_entity::TankEntity as polyfight::game::entity::base_entity::GenericEntityHelpers&gt;::take_census (80 samples, 0.08%)</title><rect x="95.7152%" y="437" width="0.0825%" height="15" fill="rgb(242,21,14)" fg:x="92861" fg:w="80"/><text x="95.9652%" y="447.50"></text></g><g><title>polyfight`bytes::bytes_mut::BytesMut::freeze (13 samples, 0.01%)</title><rect x="95.8008%" y="437" width="0.0134%" height="15" fill="rgb(222,19,48)" fg:x="92944" fg:w="13"/><text x="96.0508%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.01%)</title><rect x="95.8637%" y="341" width="0.0103%" height="15" fill="rgb(232,45,27)" fg:x="93005" fg:w="10"/><text x="96.1137%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.01%)</title><rect x="95.8760%" y="341" width="0.0124%" height="15" fill="rgb(249,103,42)" fg:x="93017" fg:w="12"/><text x="96.1260%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (10 samples, 0.01%)</title><rect x="95.8781%" y="325" width="0.0103%" height="15" fill="rgb(246,81,33)" fg:x="93019" fg:w="10"/><text x="96.1281%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (31 samples, 0.03%)</title><rect x="95.8606%" y="357" width="0.0320%" height="15" fill="rgb(252,33,42)" fg:x="93002" fg:w="31"/><text x="96.1106%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (55 samples, 0.06%)</title><rect x="95.8420%" y="373" width="0.0567%" height="15" fill="rgb(209,212,41)" fg:x="92984" fg:w="55"/><text x="96.0920%" y="383.50"></text></g><g><title>polyfight`bytes::bytes_mut::BytesMut::reserve_inner (87 samples, 0.09%)</title><rect x="95.8142%" y="437" width="0.0897%" height="15" fill="rgb(207,154,6)" fg:x="92957" fg:w="87"/><text x="96.0642%" y="447.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (74 samples, 0.08%)</title><rect x="95.8276%" y="421" width="0.0763%" height="15" fill="rgb(223,64,47)" fg:x="92970" fg:w="74"/><text x="96.0776%" y="431.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (69 samples, 0.07%)</title><rect x="95.8327%" y="405" width="0.0711%" height="15" fill="rgb(211,161,38)" fg:x="92975" fg:w="69"/><text x="96.0827%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`realloc (63 samples, 0.06%)</title><rect x="95.8389%" y="389" width="0.0649%" height="15" fill="rgb(219,138,40)" fg:x="92981" fg:w="63"/><text x="96.0889%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (24 samples, 0.02%)</title><rect x="96.0007%" y="357" width="0.0247%" height="15" fill="rgb(241,228,46)" fg:x="93138" fg:w="24"/><text x="96.2507%" y="367.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (48 samples, 0.05%)</title><rect x="95.9770%" y="405" width="0.0495%" height="15" fill="rgb(223,209,38)" fg:x="93115" fg:w="48"/><text x="96.2270%" y="415.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (37 samples, 0.04%)</title><rect x="95.9884%" y="389" width="0.0381%" height="15" fill="rgb(236,164,45)" fg:x="93126" fg:w="37"/><text x="96.2384%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`realloc (26 samples, 0.03%)</title><rect x="95.9997%" y="373" width="0.0268%" height="15" fill="rgb(231,15,5)" fg:x="93137" fg:w="26"/><text x="96.2497%" y="383.50"></text></g><g><title>polyfight`bytes::bytes_mut::BytesMut::reserve_inner (58 samples, 0.06%)</title><rect x="95.9688%" y="421" width="0.0598%" height="15" fill="rgb(252,35,15)" fg:x="93107" fg:w="58"/><text x="96.2188%" y="431.50"></text></g><g><title>polyfight`polyfight::game::entity::tank_entity::TankEntity::take_self_census (122 samples, 0.13%)</title><rect x="95.9039%" y="437" width="0.1257%" height="15" fill="rgb(248,181,18)" fg:x="93044" fg:w="122"/><text x="96.1539%" y="447.50"></text></g><g><title>polyfight`polyfight::connection::packets::form_update_packet (3,082 samples, 3.18%)</title><rect x="92.8560%" y="453" width="3.1767%" height="15" fill="rgb(233,39,42)" fg:x="90087" fg:w="3082"/><text x="93.1060%" y="463.50">pol..</text></g><g><title>polyfight`polyfight::game::entity::ai::AI::tick (31 samples, 0.03%)</title><rect x="96.0327%" y="453" width="0.0320%" height="15" fill="rgb(238,110,33)" fg:x="93169" fg:w="31"/><text x="96.2827%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (29 samples, 0.03%)</title><rect x="96.0698%" y="437" width="0.0299%" height="15" fill="rgb(233,195,10)" fg:x="93205" fg:w="29"/><text x="96.3198%" y="447.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::delete (49 samples, 0.05%)</title><rect x="96.0997%" y="437" width="0.0505%" height="15" fill="rgb(254,105,3)" fg:x="93234" fg:w="49"/><text x="96.3497%" y="447.50"></text></g><g><title>polyfight`polyfight::game::entity::base_entity::BaseEntity::tick::_{{closure}} (96 samples, 0.10%)</title><rect x="96.0667%" y="453" width="0.0990%" height="15" fill="rgb(221,225,9)" fg:x="93202" fg:w="96"/><text x="96.3167%" y="463.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::insert (15 samples, 0.02%)</title><rect x="96.1502%" y="437" width="0.0155%" height="15" fill="rgb(224,227,45)" fg:x="93283" fg:w="15"/><text x="96.4002%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (28 samples, 0.03%)</title><rect x="96.1698%" y="437" width="0.0289%" height="15" fill="rgb(229,198,43)" fg:x="93302" fg:w="28"/><text x="96.4198%" y="447.50"></text></g><g><title>polyfight`polyfight::game::entity::base_entity::BaseEntity::add_to_game_server::_{{closure}} (24 samples, 0.02%)</title><rect x="96.1997%" y="437" width="0.0247%" height="15" fill="rgb(206,209,35)" fg:x="93331" fg:w="24"/><text x="96.4497%" y="447.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::insert (15 samples, 0.02%)</title><rect x="96.2090%" y="421" width="0.0155%" height="15" fill="rgb(245,195,53)" fg:x="93340" fg:w="15"/><text x="96.4590%" y="431.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (10 samples, 0.01%)</title><rect x="96.2141%" y="405" width="0.0103%" height="15" fill="rgb(240,92,26)" fg:x="93345" fg:w="10"/><text x="96.4641%" y="415.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::query_radius (37 samples, 0.04%)</title><rect x="96.2440%" y="405" width="0.0381%" height="15" fill="rgb(207,40,23)" fg:x="93374" fg:w="37"/><text x="96.4940%" y="415.50"></text></g><g><title>polyfight`polyfight::game::server::GameServer::find_spawn_position (57 samples, 0.06%)</title><rect x="96.2306%" y="421" width="0.0588%" height="15" fill="rgb(223,111,35)" fg:x="93361" fg:w="57"/><text x="96.4806%" y="431.50"></text></g><g><title>polyfight`polyfight::game::entity::base_entity::BaseEntity::new (64 samples, 0.07%)</title><rect x="96.2244%" y="437" width="0.0660%" height="15" fill="rgb(229,147,28)" fg:x="93355" fg:w="64"/><text x="96.4744%" y="447.50"></text></g><g><title>polyfight`polyfight::game::entity::projectile_entity::ProjectileEntity::new::_{{closure}} (123 samples, 0.13%)</title><rect x="96.1657%" y="453" width="0.1268%" height="15" fill="rgb(211,29,28)" fg:x="93298" fg:w="123"/><text x="96.4157%" y="463.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::delete (210 samples, 0.22%)</title><rect x="96.2945%" y="453" width="0.2165%" height="15" fill="rgb(228,72,33)" fg:x="93423" fg:w="210"/><text x="96.5445%" y="463.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::insert (78 samples, 0.08%)</title><rect x="96.5110%" y="453" width="0.0804%" height="15" fill="rgb(205,214,31)" fg:x="93633" fg:w="78"/><text x="96.7610%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.02%)</title><rect x="97.2273%" y="421" width="0.0216%" height="15" fill="rgb(224,111,15)" fg:x="94328" fg:w="21"/><text x="97.4773%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (27 samples, 0.03%)</title><rect x="97.2490%" y="421" width="0.0278%" height="15" fill="rgb(253,21,26)" fg:x="94349" fg:w="27"/><text x="97.4990%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (10 samples, 0.01%)</title><rect x="97.3057%" y="405" width="0.0103%" height="15" fill="rgb(245,139,43)" fg:x="94404" fg:w="10"/><text x="97.5557%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.01%)</title><rect x="97.3376%" y="373" width="0.0134%" height="15" fill="rgb(252,170,7)" fg:x="94435" fg:w="13"/><text x="97.5876%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (26 samples, 0.03%)</title><rect x="97.3675%" y="357" width="0.0268%" height="15" fill="rgb(231,118,14)" fg:x="94464" fg:w="26"/><text x="97.6175%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (40 samples, 0.04%)</title><rect x="97.3562%" y="373" width="0.0412%" height="15" fill="rgb(238,83,0)" fg:x="94453" fg:w="40"/><text x="97.6062%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (76 samples, 0.08%)</title><rect x="97.3252%" y="389" width="0.0783%" height="15" fill="rgb(221,39,39)" fg:x="94423" fg:w="76"/><text x="97.5752%" y="399.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (192 samples, 0.20%)</title><rect x="97.2108%" y="437" width="0.1979%" height="15" fill="rgb(222,119,46)" fg:x="94312" fg:w="192"/><text x="97.4608%" y="447.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (114 samples, 0.12%)</title><rect x="97.2912%" y="421" width="0.1175%" height="15" fill="rgb(222,165,49)" fg:x="94390" fg:w="114"/><text x="97.5412%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`realloc (90 samples, 0.09%)</title><rect x="97.3160%" y="405" width="0.0928%" height="15" fill="rgb(219,113,52)" fg:x="94414" fg:w="90"/><text x="97.5660%" y="415.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::query_radius (803 samples, 0.83%)</title><rect x="96.5914%" y="453" width="0.8277%" height="15" fill="rgb(214,7,15)" fg:x="93711" fg:w="803"/><text x="96.8414%" y="463.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (10 samples, 0.01%)</title><rect x="97.4087%" y="437" width="0.0103%" height="15" fill="rgb(235,32,4)" fg:x="94504" fg:w="10"/><text x="97.6587%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (10 samples, 0.01%)</title><rect x="98.4972%" y="405" width="0.0103%" height="15" fill="rgb(238,90,54)" fg:x="95560" fg:w="10"/><text x="98.7472%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.02%)</title><rect x="98.5250%" y="373" width="0.0247%" height="15" fill="rgb(213,208,19)" fg:x="95587" fg:w="24"/><text x="98.7750%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (15 samples, 0.02%)</title><rect x="98.5642%" y="357" width="0.0155%" height="15" fill="rgb(233,156,4)" fg:x="95625" fg:w="15"/><text x="98.8142%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (29 samples, 0.03%)</title><rect x="98.5559%" y="373" width="0.0299%" height="15" fill="rgb(207,194,5)" fg:x="95617" fg:w="29"/><text x="98.8059%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (77 samples, 0.08%)</title><rect x="98.5178%" y="389" width="0.0794%" height="15" fill="rgb(206,111,30)" fg:x="95580" fg:w="77"/><text x="98.7678%" y="399.50"></text></g><g><title>polyfight`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (123 samples, 0.13%)</title><rect x="98.4724%" y="437" width="0.1268%" height="15" fill="rgb(243,70,54)" fg:x="95536" fg:w="123"/><text x="98.7224%" y="447.50"></text></g><g><title>polyfight`alloc::raw_vec::finish_grow (102 samples, 0.11%)</title><rect x="98.4941%" y="421" width="0.1051%" height="15" fill="rgb(242,28,8)" fg:x="95557" fg:w="102"/><text x="98.7441%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`realloc (89 samples, 0.09%)</title><rect x="98.5075%" y="405" width="0.0917%" height="15" fill="rgb(219,106,18)" fg:x="95570" fg:w="89"/><text x="98.7575%" y="415.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::query_rect (1,149 samples, 1.18%)</title><rect x="97.4190%" y="453" width="1.1843%" height="15" fill="rgb(244,222,10)" fg:x="94514" fg:w="1149"/><text x="97.6690%" y="463.50"></text></g><g><title>polyfight`std::io::stdio::_print (23 samples, 0.02%)</title><rect x="98.6126%" y="453" width="0.0237%" height="15" fill="rgb(236,179,52)" fg:x="95672" fg:w="23"/><text x="98.8626%" y="463.50"></text></g><g><title>polyfight`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (23 samples, 0.02%)</title><rect x="98.6126%" y="437" width="0.0237%" height="15" fill="rgb(213,23,39)" fg:x="95672" fg:w="23"/><text x="98.8626%" y="447.50"></text></g><g><title>polyfight`core::fmt::write (22 samples, 0.02%)</title><rect x="98.6137%" y="421" width="0.0227%" height="15" fill="rgb(238,48,10)" fg:x="95673" fg:w="22"/><text x="98.8637%" y="431.50"></text></g><g><title>polyfight`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (19 samples, 0.02%)</title><rect x="98.6168%" y="405" width="0.0196%" height="15" fill="rgb(251,196,23)" fg:x="95676" fg:w="19"/><text x="98.8668%" y="415.50"></text></g><g><title>polyfight`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (19 samples, 0.02%)</title><rect x="98.6168%" y="389" width="0.0196%" height="15" fill="rgb(250,152,24)" fg:x="95676" fg:w="19"/><text x="98.8668%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`write (19 samples, 0.02%)</title><rect x="98.6168%" y="373" width="0.0196%" height="15" fill="rgb(209,150,17)" fg:x="95676" fg:w="19"/><text x="98.8668%" y="383.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (29 samples, 0.03%)</title><rect x="98.6868%" y="421" width="0.0299%" height="15" fill="rgb(234,202,34)" fg:x="95744" fg:w="29"/><text x="98.9368%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (124 samples, 0.13%)</title><rect x="98.7167%" y="421" width="0.1278%" height="15" fill="rgb(253,148,53)" fg:x="95773" fg:w="124"/><text x="98.9667%" y="431.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (199 samples, 0.21%)</title><rect x="98.6446%" y="437" width="0.2051%" height="15" fill="rgb(218,129,16)" fg:x="95703" fg:w="199"/><text x="98.8946%" y="447.50"></text></g><g><title>polyfight`std::sys::pal::unix::time::Timespec::now (207 samples, 0.21%)</title><rect x="98.6374%" y="453" width="0.2134%" height="15" fill="rgb(216,85,19)" fg:x="95696" fg:w="207"/><text x="98.8874%" y="463.50"></text></g><g><title>polyfight`polyfight::game::server::GameServer::tick::_{{closure}} (17,207 samples, 17.74%)</title><rect x="81.1282%" y="469" width="17.7359%" height="15" fill="rgb(235,228,7)" fg:x="78709" fg:w="17207"/><text x="81.3782%" y="479.50">polyfight`polyfight::game::s..</text></g><g><title>polyfight`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (12 samples, 0.01%)</title><rect x="98.8518%" y="453" width="0.0124%" height="15" fill="rgb(245,175,0)" fg:x="95904" fg:w="12"/><text x="99.1018%" y="463.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::insert (32 samples, 0.03%)</title><rect x="98.8703%" y="469" width="0.0330%" height="15" fill="rgb(208,168,36)" fg:x="95922" fg:w="32"/><text x="99.1203%" y="479.50"></text></g><g><title>polyfight`polyfight::physics::shg::SpatialHashGrid::query_radius (26 samples, 0.03%)</title><rect x="98.9033%" y="469" width="0.0268%" height="15" fill="rgb(246,171,24)" fg:x="95954" fg:w="26"/><text x="99.1533%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (898 samples, 0.93%)</title><rect x="98.9971%" y="437" width="0.9256%" height="15" fill="rgb(215,142,24)" fg:x="96045" fg:w="898"/><text x="99.2471%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (14 samples, 0.01%)</title><rect x="99.9351%" y="421" width="0.0144%" height="15" fill="rgb(250,187,7)" fg:x="96955" fg:w="14"/><text x="100.1851%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (14 samples, 0.01%)</title><rect x="99.9351%" y="405" width="0.0144%" height="15" fill="rgb(228,66,33)" fg:x="96955" fg:w="14"/><text x="100.1851%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_wait (31 samples, 0.03%)</title><rect x="99.9227%" y="437" width="0.0320%" height="15" fill="rgb(234,215,21)" fg:x="96943" fg:w="31"/><text x="100.1727%" y="447.50"></text></g><g><title>polyfight`tokio::runtime::park::Inner::park (989 samples, 1.02%)</title><rect x="98.9404%" y="469" width="1.0194%" height="15" fill="rgb(222,191,20)" fg:x="95990" fg:w="989"/><text x="99.1904%" y="479.50"></text></g><g><title>polyfight`parking_lot::condvar::Condvar::wait_until_internal (950 samples, 0.98%)</title><rect x="98.9806%" y="453" width="0.9792%" height="15" fill="rgb(245,79,54)" fg:x="96029" fg:w="950"/><text x="99.2306%" y="463.50"></text></g><g><title>polyfight`tokio::sync::batch_semaphore::Semaphore::add_permits_locked (14 samples, 0.01%)</title><rect x="99.9598%" y="469" width="0.0144%" height="15" fill="rgb(240,10,37)" fg:x="96979" fg:w="14"/><text x="100.2098%" y="479.50"></text></g><g><title>polyfight`tokio::runtime::task::waker::wake_by_val (14 samples, 0.01%)</title><rect x="99.9598%" y="453" width="0.0144%" height="15" fill="rgb(214,192,32)" fg:x="96979" fg:w="14"/><text x="100.2098%" y="463.50"></text></g><g><title>polyfight`tokio::runtime::scheduler::multi_thread::worker::_&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::scheduler::multi_thread::handle::Handle&gt;&gt;::schedule (14 samples, 0.01%)</title><rect x="99.9598%" y="437" width="0.0144%" height="15" fill="rgb(209,36,54)" fg:x="96979" fg:w="14"/><text x="100.2098%" y="447.50"></text></g><g><title>polyfight`tokio::runtime::context::with_scheduler (14 samples, 0.01%)</title><rect x="99.9598%" y="421" width="0.0144%" height="15" fill="rgb(220,10,11)" fg:x="96979" fg:w="14"/><text x="100.2098%" y="431.50"></text></g><g><title>polyfight`&lt;tokio::time::sleep::Sleep as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="99.9804%" y="453" width="0.0134%" height="15" fill="rgb(221,106,17)" fg:x="96999" fg:w="13"/><text x="100.2304%" y="463.50"></text></g><g><title>polyfight`tokio::runtime::time::entry::TimerEntry::poll_elapsed (10 samples, 0.01%)</title><rect x="99.9835%" y="437" width="0.0103%" height="15" fill="rgb(251,142,44)" fg:x="97002" fg:w="10"/><text x="100.2335%" y="447.50"></text></g><g><title>polyfight`tokio::runtime::park::CachedParkThread::block_on (31,775 samples, 32.75%)</title><rect x="67.2453%" y="485" width="32.7517%" height="15" fill="rgb(238,13,15)" fg:x="65240" fg:w="31775"/><text x="67.4953%" y="495.50">polyfight`tokio::runtime::park::CachedParkThread::blo..</text></g><g><title>polyfight`tokio::time::interval::Interval::poll_tick (18 samples, 0.02%)</title><rect x="99.9784%" y="469" width="0.0186%" height="15" fill="rgb(208,107,27)" fg:x="96997" fg:w="18"/><text x="100.2284%" y="479.50"></text></g><g><title>all (97,018 samples, 100%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(205,136,37)" fg:x="0" fg:w="97018"/><text x="0.2500%" y="527.50"></text></g><g><title>polyfight`polyfight::main (31,787 samples, 32.76%)</title><rect x="67.2360%" y="501" width="32.7640%" height="15" fill="rgb(250,205,27)" fg:x="65231" fg:w="31787"/><text x="67.4860%" y="511.50">polyfight`polyfight::main</text></g></svg></svg>